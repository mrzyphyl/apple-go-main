{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar CartContext = createContext();\nexport function CartProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    cartItems = _useState2[0],\n    setCartItems = _useState2[1];\n  var cartStorageKey = 'userCart';\n  useEffect(function () {\n    var userIdentifier = generateUserIdentifier();\n    var savedCartItems = localStorage.getItem(cartStorageKey + \"_\" + userIdentifier);\n    if (savedCartItems) {\n      setCartItems(JSON.parse(savedCartItems));\n    }\n  }, []);\n  var updateCart = function updateCart(newCartItems) {\n    var userIdentifier = generateUserIdentifier();\n    setCartItems(newCartItems);\n    localStorage.setItem(cartStorageKey + \"_\" + userIdentifier, JSON.stringify(newCartItems));\n  };\n  var addToCart = function addToCart(item) {\n    var updatedCart = [].concat(_toConsumableArray(cartItems), [item]);\n    updateCart(updatedCart);\n  };\n  var removeFromCart = function removeFromCart(item) {\n    var updatedCart = cartItems.filter(function (cartItem) {\n      return cartItem.name !== item.name;\n    });\n    updateCart(updatedCart);\n  };\n  var clearCart = function clearCart() {\n    updateCart([]);\n  };\n  return _jsx(CartContext.Provider, {\n    value: {\n      cartItems: cartItems,\n      addToCart: addToCart,\n      removeFromCart: removeFromCart,\n      clearCart: clearCart\n    },\n    children: children\n  });\n}\nexport function useCart() {\n  var context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n}\nfunction generateUserIdentifier() {\n  var token = Math.random().toString(36).substring(2, 15);\n  return token;\n}","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","CartContext","CartProvider","_ref","children","_useState","_useState2","_slicedToArray","cartItems","setCartItems","cartStorageKey","userIdentifier","generateUserIdentifier","savedCartItems","localStorage","getItem","JSON","parse","updateCart","newCartItems","setItem","stringify","addToCart","item","updatedCart","concat","_toConsumableArray","removeFromCart","filter","cartItem","name","clearCart","Provider","value","useCart","context","Error","token","Math","random","toString","substring"],"sources":["C:/Users/Asus/Desktop/sirFrancis-main/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst CartContext = createContext();\r\n\r\nexport function CartProvider({ children }) {\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const cartStorageKey = 'userCart';\r\n\r\n  // Load the cart items for the current user from local storage on component mount\r\n  useEffect(() => {\r\n    // Replace this logic with your user authentication or unique identifier generation.\r\n    const userIdentifier = generateUserIdentifier(); // You need to implement this function.\r\n\r\n    // Load the user-specific cart from local storage\r\n    const savedCartItems = localStorage.getItem(`${cartStorageKey}_${userIdentifier}`);\r\n    if (savedCartItems) {\r\n      setCartItems(JSON.parse(savedCartItems));\r\n    }\r\n  }, []);\r\n\r\n  // Function to update the cart and local storage\r\n  const updateCart = (newCartItems) => {\r\n    // Replace this logic with your user authentication or unique identifier generation.\r\n    const userIdentifier = generateUserIdentifier(); // You need to implement this function.\r\n\r\n    setCartItems(newCartItems);\r\n    localStorage.setItem(`${cartStorageKey}_${userIdentifier}`, JSON.stringify(newCartItems));\r\n  };\r\n\r\n  const addToCart = (item) => {\r\n    const updatedCart = [...cartItems, item];\r\n    updateCart(updatedCart);\r\n  };\r\n\r\n  const removeFromCart = (item) => {\r\n    const updatedCart = cartItems.filter((cartItem) => cartItem.name !== item.name);\r\n    updateCart(updatedCart);\r\n  };\r\n\r\n  const clearCart = () => {\r\n    updateCart([]);\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={{ cartItems, addToCart, removeFromCart, clearCart }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useCart() {\r\n  const context = useContext(CartContext);\r\n  if (!context) {\r\n    throw new Error('useCart must be used within a CartProvider');\r\n  }\r\n  return context;\r\n}\r\n\r\n// Function to generate a unique identifier for the current user (replace with your own logic)\r\nfunction generateUserIdentifier() {\r\n  // You can use cookies, a user's IP address, or any other method to generate a unique identifier.\r\n  // For this example, we'll use a random token.\r\n  const token = Math.random().toString(36).substring(2, 15);\r\n  return token;\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAE9E,IAAMC,WAAW,GAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,SAASO,YAAYA,CAAAC,IAAA,EAAe;EAAA,IAAZC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EACrC,IAAAC,SAAA,GAAkCR,QAAQ,CAAC,EAAE,CAAC;IAAAS,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAC9B,IAAMI,cAAc,GAAG,UAAU;EAGjCZ,SAAS,CAAC,YAAM;IAEd,IAAMa,cAAc,GAAGC,sBAAsB,CAAC,CAAC;IAG/C,IAAMC,cAAc,GAAGC,YAAY,CAACC,OAAO,CAAIL,cAAc,SAAIC,cAAgB,CAAC;IAClF,IAAIE,cAAc,EAAE;MAClBJ,YAAY,CAACO,IAAI,CAACC,KAAK,CAACJ,cAAc,CAAC,CAAC;IAC1C;EACF,CAAC,EAAE,EAAE,CAAC;EAGN,IAAMK,UAAU,GAAG,SAAbA,UAAUA,CAAIC,YAAY,EAAK;IAEnC,IAAMR,cAAc,GAAGC,sBAAsB,CAAC,CAAC;IAE/CH,YAAY,CAACU,YAAY,CAAC;IAC1BL,YAAY,CAACM,OAAO,CAAIV,cAAc,SAAIC,cAAc,EAAIK,IAAI,CAACK,SAAS,CAACF,YAAY,CAAC,CAAC;EAC3F,CAAC;EAED,IAAMG,SAAS,GAAG,SAAZA,SAASA,CAAIC,IAAI,EAAK;IAC1B,IAAMC,WAAW,MAAAC,MAAA,CAAAC,kBAAA,CAAOlB,SAAS,IAAEe,IAAI,EAAC;IACxCL,UAAU,CAACM,WAAW,CAAC;EACzB,CAAC;EAED,IAAMG,cAAc,GAAG,SAAjBA,cAAcA,CAAIJ,IAAI,EAAK;IAC/B,IAAMC,WAAW,GAAGhB,SAAS,CAACoB,MAAM,CAAC,UAACC,QAAQ;MAAA,OAAKA,QAAQ,CAACC,IAAI,KAAKP,IAAI,CAACO,IAAI;IAAA,EAAC;IAC/EZ,UAAU,CAACM,WAAW,CAAC;EACzB,CAAC;EAED,IAAMO,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;IACtBb,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,OACElB,IAAA,CAACC,WAAW,CAAC+B,QAAQ;IAACC,KAAK,EAAE;MAAEzB,SAAS,EAATA,SAAS;MAAEc,SAAS,EAATA,SAAS;MAAEK,cAAc,EAAdA,cAAc;MAAEI,SAAS,EAATA;IAAU,CAAE;IAAA3B,QAAA,EAC9EA;EAAQ,CACW,CAAC;AAE3B;AAEA,OAAO,SAAS8B,OAAOA,CAAA,EAAG;EACxB,IAAMC,OAAO,GAAGvC,UAAU,CAACK,WAAW,CAAC;EACvC,IAAI,CAACkC,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;EAC/D;EACA,OAAOD,OAAO;AAChB;AAGA,SAASvB,sBAAsBA,CAAA,EAAG;EAGhC,IAAMyB,KAAK,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC;EACzD,OAAOJ,KAAK;AACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}