{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SDashboard(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(new Animated.Value(1)),\n    _useState2 = _slicedToArray(_useState, 1),\n    scaleValue = _useState2[0];\n  var toggleSProfileIcon = function toggleSProfileIcon() {\n    navigation.navigate(\"SProfileIcon\");\n  };\n  var toggleSCartIcon = function toggleSCartIcon() {\n    navigation.navigate(\"SCartIcon\");\n  };\n  var handlePress = function handlePress(menu) {\n    Animated.sequence([Animated.timing(scaleValue, {\n      toValue: 0.9,\n      duration: 100,\n      useNativeDriver: true\n    }), Animated.timing(scaleValue, {\n      toValue: 1,\n      duration: 100,\n      useNativeDriver: true\n    })]).start(function () {\n      if (menu === \"SMcDonalds\") {\n        navigation.navigate(menu + \"Menu\");\n      } else if (menu === \"SSubway\") {\n        navigation.navigate(menu);\n      } else if (menu === \"SKFC\") {\n        navigation.navigate(menu);\n      }\n    });\n  };\n  var cartItems = [];\n  var handleBackButton = function handleBackButton() {\n    Alert.alert(\"Exit App\", \"Do you want to exit the app?\", [{\n      text: \"Cancel\",\n      onPress: function onPress() {\n        return null;\n      },\n      style: \"cancel\"\n    }, {\n      text: \"OK\",\n      onPress: function onPress() {\n        return BackHandler.exitApp();\n      }\n    }], {\n      cancelable: false\n    });\n    return true;\n  };\n  React.useEffect(function () {\n    BackHandler.addEventListener(\"hardwareBackPress\", handleBackButton);\n    return function () {\n      BackHandler.removeEventListener(\"hardwareBackPress\", handleBackButton);\n    };\n  }, []);\n  var handleLogout = function handleLogout() {\n    navigation.navigate(\"LoginScreen\");\n  };\n  return _jsx(ScrollView, {\n    contentContainerStyle: styles.scrollContainer,\n    children: _jsxs(Background, {\n      children: [_jsx(Logo, {}), _jsx(View, {\n        style: styles.headerContainer,\n        children: _jsx(Header, {\n          style: styles.welcomeText,\n          children: \"Welcome to APPLEGO Express\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.profileButton,\n        onPress: toggleSProfileIcon,\n        children: _jsx(View, {\n          style: styles.iconCircle,\n          children: _jsx(Icon, {\n            name: \"user\",\n            size: 30,\n            color: \"#FFF\"\n          })\n        })\n      }), _jsx(TouchableWithoutFeedback, {\n        onPress: function onPress() {\n          return handlePress(\"SMcDonalds\");\n        },\n        children: _jsxs(Animated.View, {\n          style: [styles.brandButton, {\n            transform: [{\n              scale: scaleValue\n            }]\n          }],\n          children: [_jsxs(View, {\n            children: [_jsx(Text, {\n              style: styles.brandButtonText,\n              children: \"McDonald's\"\n            }), _jsx(Text, {\n              style: styles.salesQuote,\n              children: \"\\\"I'm lovin' it!\\\" - McDonald's\"\n            }), _jsx(Text, {\n              style: styles.additionalInfo,\n              children: \"Serving Happiness Since 1955\"\n            }), _jsx(Text, {\n              style: styles.additionalInfo,\n              children: \"Find us at 1234 Fast Food Lane\"\n            })]\n          }), _jsx(Icon, {\n            name: \"arrow-right\",\n            size: 30,\n            color: \"#007BFF\"\n          })]\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.cartButton,\n        onPress: toggleSCartIcon,\n        children: _jsxs(View, {\n          style: styles.iconCircle,\n          children: [_jsx(Text, {\n            style: styles.cartIcon,\n            children: \"\\uD83D\\uDED2\"\n          }), cartItems.length > 0 && _jsx(Text, {\n            style: styles.cartItemCount,\n            children: cartItems.length\n          })]\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.logoutButton,\n        onPress: handleLogout,\n        children: _jsx(Text, {\n          style: styles.logoutText,\n          children: \"Logout\"\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  logoutButton: {\n    position: \"absolute\",\n    bottom: 20,\n    right: 20,\n    backgroundColor: \"#f72855\",\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 10,\n    elevation: 2\n  },\n  logoutText: {\n    color: \"white\",\n    fontSize: 18,\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"names":["React","useState","Text","TextInput","View","StyleSheet","TouchableOpacity","Animated","TouchableWithoutFeedback","ScrollView","BackHandler","Alert","Background","Logo","Header","Icon","jsx","_jsx","jsxs","_jsxs","SDashboard","_ref","navigation","_useState","Value","_useState2","_slicedToArray","scaleValue","toggleSProfileIcon","navigate","toggleSCartIcon","handlePress","menu","sequence","timing","toValue","duration","useNativeDriver","start","cartItems","handleBackButton","alert","text","onPress","style","exitApp","cancelable","useEffect","addEventListener","removeEventListener","handleLogout","contentContainerStyle","styles","scrollContainer","children","headerContainer","welcomeText","profileButton","iconCircle","name","size","color","brandButton","transform","scale","brandButtonText","salesQuote","additionalInfo","cartButton","cartIcon","length","cartItemCount","logoutButton","logoutText","create","position","bottom","right","backgroundColor","paddingVertical","paddingHorizontal","borderRadius","elevation","fontSize","fontWeight"],"sources":["C:/Users/Asus/Desktop/sirFrancis-main/src/screens/LoginScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Text,\n  TextInput,\n  View,\n  StyleSheet,\n  TouchableOpacity,\n  Animated,\n  TouchableWithoutFeedback,\n  ScrollView,\n  BackHandler, // Import BackHandler\n  Alert, // Import Alert\n} from \"react-native\";\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\n\nexport default function SDashboard({ navigation }) {\n  const [scaleValue] = useState(new Animated.Value(1));\n\n  const toggleSProfileIcon = () => {\n    navigation.navigate(\"SProfileIcon\");\n  };\n\n  const toggleSCartIcon = () => {\n    navigation.navigate(\"SCartIcon\");\n  };\n\n  const handlePress = (menu) => {\n    Animated.sequence([\n      Animated.timing(scaleValue, { toValue: 0.9, duration: 100, useNativeDriver: true }),\n      Animated.timing(scaleValue, { toValue: 1, duration: 100, useNativeDriver: true }),\n    ]).start(() => {\n      if (menu === \"SMcDonalds\") {\n        navigation.navigate(menu + \"Menu\");\n      } else if (menu === \"SSubway\") {\n        navigation.navigate(menu);\n      } else if (menu === \"SKFC\") {\n        navigation.navigate(menu);\n      }\n    });\n  };\n\n  const cartItems = [];\n\n  // Handle the back button press\n  const handleBackButton = () => {\n    Alert.alert(\n      \"Exit App\",\n      \"Do you want to exit the app?\",\n      [\n        {\n          text: \"Cancel\",\n          onPress: () => null,\n          style: \"cancel\",\n        },\n        { text: \"OK\", onPress: () => BackHandler.exitApp() }, // Exit the app when OK is pressed\n      ],\n      { cancelable: false }\n    );\n    return true;\n  };\n\n  // Register the back button handler\n  React.useEffect(() => {\n    BackHandler.addEventListener(\"hardwareBackPress\", handleBackButton);\n    return () => {\n      BackHandler.removeEventListener(\"hardwareBackPress\", handleBackButton);\n    };\n  }, []);\n\n  const handleLogout = () => {\n    // Clear the text fields and navigate to the login screen\n    // You may need to replace 'LoginScreen' with the actual name of your login screen component\n    navigation.navigate(\"LoginScreen\");\n  };\n\n  return (\n    <ScrollView contentContainerStyle={styles.scrollContainer}>\n      <Background>\n        <Logo />\n        <View style={styles.headerContainer}>\n          <Header style={styles.welcomeText}>Welcome to APPLEGO Express</Header>\n        </View>\n\n        <TouchableOpacity style={styles.profileButton} onPress={toggleSProfileIcon}>\n          <View style={styles.iconCircle}>\n            <Icon name=\"user\" size={30} color=\"#FFF\" />\n          </View>\n        </TouchableOpacity>\n\n        <TouchableWithoutFeedback onPress={() => handlePress(\"SMcDonalds\")}>\n          <Animated.View style={[styles.brandButton, { transform: [{ scale: scaleValue }] }]}>\n            <View>\n              <Text style={styles.brandButtonText}>McDonald's</Text>\n              <Text style={styles.salesQuote}>\n                \"I'm lovin' it!\" - McDonald's\n              </Text>\n              <Text style={styles.additionalInfo}>\n                Serving Happiness Since 1955\n              </Text>\n              <Text style={styles.additionalInfo}>\n                Find us at 1234 Fast Food Lane\n              </Text>\n            </View>\n            <Icon name=\"arrow-right\" size={30} color=\"#007BFF\" />\n          </Animated.View>\n        </TouchableWithoutFeedback>\n\n        {/* Other brand buttons */}\n        {/* ... */}\n\n        <TouchableOpacity style={styles.cartButton} onPress={toggleSCartIcon}>\n          <View style={styles.iconCircle}>\n            <Text style={styles.cartIcon}>🛒</Text>\n            {cartItems.length > 0 && (\n              <Text style={styles.cartItemCount}>{cartItems.length}</Text>\n            )}\n          </View>\n        </TouchableOpacity>\n\n        {/* Logout button */}\n        <TouchableOpacity style={styles.logoutButton} onPress={handleLogout}>\n          <Text style={styles.logoutText}>Logout</Text>\n        </TouchableOpacity>\n      </Background>\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  // ... (existing styles)\n\n  // Add styles for the logout button\n  logoutButton: {\n    position: \"absolute\",\n    bottom: 20,\n    right: 20,\n    backgroundColor: \"#f72855\",\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 10,\n    elevation: 2,\n  },\n  logoutText: {\n    color: \"white\",\n    fontSize: 18,\n    fontWeight: \"bold\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}