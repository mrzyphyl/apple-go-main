{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function FastFoodBox(_ref) {\n  var scaleValue = _ref.scaleValue,\n    isEditing = _ref.isEditing,\n    handlePlusButtonPress = _ref.handlePlusButtonPress,\n    editableText = _ref.editableText,\n    setEditableText = _ref.setEditableText,\n    navigation = _ref.navigation,\n    brandName = _ref.brandName;\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return navigation.navigate('Seller');\n    },\n    children: _jsxs(Animated.View, {\n      style: [styles.brandButton, {\n        transform: [{\n          scale: scaleValue\n        }]\n      }],\n      children: [_jsx(View, {\n        children: isEditing ? _jsx(TextInput, {\n          style: styles.editableText,\n          onChangeText: function onChangeText(text) {\n            return setEditableText(text);\n          },\n          value: editableText\n        }) : _jsx(Text, {\n          style: styles.brandButtonText1,\n          children: brandName\n        })\n      }), _jsx(Icon, {\n        name: \"arrow-right\",\n        size: 30,\n        color: \"#007BFF\"\n      })]\n    })\n  });\n}","map":{"version":3,"names":["FastFoodBox","_ref","scaleValue","isEditing","handlePlusButtonPress","editableText","setEditableText","navigation","brandName","_jsx","TouchableWithoutFeedback","onPress","navigate","children","_jsxs","Animated","View","style","styles","brandButton","transform","scale","TextInput","onChangeText","text","value","Text","brandButtonText1","Icon","name","size","color"],"sources":["C:/Users/Asus/Desktop/sirFrancis-main/src/screens/FastFoodBox.js"],"sourcesContent":["export default function FastFoodBox({\r\n  scaleValue,\r\n  isEditing,\r\n  handlePlusButtonPress,\r\n  editableText,\r\n  setEditableText,\r\n  navigation,\r\n  brandName, // Add brandName as a prop\r\n}) {\r\n  return (\r\n    <TouchableWithoutFeedback onPress={() => navigation.navigate('Seller')}>\r\n      <Animated.View style={[styles.brandButton, { transform: [{ scale: scaleValue }] }]}>\r\n        <View>\r\n          {isEditing ? (\r\n            <TextInput\r\n              style={styles.editableText}\r\n              onChangeText={text => setEditableText(text)}\r\n              value={editableText}\r\n            />\r\n          ) : (\r\n            <Text style={styles.brandButtonText1}>{brandName}</Text> \r\n          )}\r\n        </View>\r\n        <Icon name=\"arrow-right\" size={30} color=\"#007BFF\" />\r\n      </Animated.View>\r\n    </TouchableWithoutFeedback>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,eAAe,SAASA,WAAWA,CAAAC,IAAA,EAQhC;EAAA,IAPDC,UAAU,GAAAD,IAAA,CAAVC,UAAU;IACVC,SAAS,GAAAF,IAAA,CAATE,SAAS;IACTC,qBAAqB,GAAAH,IAAA,CAArBG,qBAAqB;IACrBC,YAAY,GAAAJ,IAAA,CAAZI,YAAY;IACZC,eAAe,GAAAL,IAAA,CAAfK,eAAe;IACfC,UAAU,GAAAN,IAAA,CAAVM,UAAU;IACVC,SAAS,GAAAP,IAAA,CAATO,SAAS;EAET,OACEC,IAAA,CAACC,wBAAwB;IAACC,OAAO,EAAE,SAAAA,QAAA;MAAA,OAAMJ,UAAU,CAACK,QAAQ,CAAC,QAAQ,CAAC;IAAA,CAAC;IAAAC,QAAA,EACrEC,KAAA,CAACC,QAAQ,CAACC,IAAI;MAACC,KAAK,EAAE,CAACC,MAAM,CAACC,WAAW,EAAE;QAAEC,SAAS,EAAE,CAAC;UAAEC,KAAK,EAAEnB;QAAW,CAAC;MAAE,CAAC,CAAE;MAAAW,QAAA,GACjFJ,IAAA,CAACO,IAAI;QAAAH,QAAA,EACFV,SAAS,GACRM,IAAA,CAACa,SAAS;UACRL,KAAK,EAAEC,MAAM,CAACb,YAAa;UAC3BkB,YAAY,EAAE,SAAAA,aAAAC,IAAI;YAAA,OAAIlB,eAAe,CAACkB,IAAI,CAAC;UAAA,CAAC;UAC5CC,KAAK,EAAEpB;QAAa,CACrB,CAAC,GAEFI,IAAA,CAACiB,IAAI;UAACT,KAAK,EAAEC,MAAM,CAACS,gBAAiB;UAAAd,QAAA,EAAEL;QAAS,CAAO;MACxD,CACG,CAAC,EACPC,IAAA,CAACmB,IAAI;QAACC,IAAI,EAAC,aAAa;QAACC,IAAI,EAAE,EAAG;QAACC,KAAK,EAAC;MAAS,CAAE,CAAC;IAAA,CACxC;EAAC,CACQ,CAAC;AAE/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}