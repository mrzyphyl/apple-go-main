{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Profile(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var username = route.params.username;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var onSaveEmail = function onSaveEmail() {\n    setEmail(email);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TouchableOpacity, {\n      style: styles.cartButton,\n      children: _jsx(Text, {\n        style: styles.cartIcon,\n        children: \"\\uD83D\\uDED2\"\n      })\n    }), _jsx(Text, {\n      style: styles.title,\n      children: \"User Profile\"\n    }), _jsxs(View, {\n      style: styles.profileBox,\n      children: [_jsx(View, {\n        style: styles.iconContainer,\n        children: _jsx(Text, {\n          style: styles.icon,\n          children: \"\\uD83D\\uDCF7\"\n        })\n      }), _jsx(Text, {\n        style: styles.name,\n        children: username\n      }), _jsx(Text, {\n        style: styles.contactNumber,\n        children: \"Contact: +1234567890\"\n      }), _jsx(TextInput, {\n        placeholder: \"Enter Email\",\n        style: styles.emailInput,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        },\n        value: email\n      }), _jsx(TouchableOpacity, {\n        style: styles.saveButton,\n        onPress: onSaveEmail,\n        children: _jsx(Text, {\n          style: styles.saveButtonText,\n          children: \"Save Email\"\n        })\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: styles.closeButton,\n      onPress: onClose,\n      children: _jsx(Text, {\n        style: styles.closeButtonText,\n        children: \"Close\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  emailInput: {\n    borderWidth: 1,\n    borderColor: 'gray',\n    borderRadius: 5,\n    padding: 10,\n    marginTop: 10,\n    width: '100%'\n  },\n  saveButton: {\n    marginTop: 10,\n    padding: 10,\n    backgroundColor: 'blue',\n    borderRadius: 5\n  },\n  saveButtonText: {\n    color: 'white',\n    fontSize: 16,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","TouchableOpacity","TextInput","jsx","_jsx","jsxs","_jsxs","Profile","_ref","route","navigation","username","params","_useState","_useState2","_slicedToArray","email","setEmail","onSaveEmail","style","styles","container","children","cartButton","cartIcon","title","profileBox","iconContainer","icon","name","contactNumber","placeholder","emailInput","onChangeText","text","value","saveButton","onPress","saveButtonText","closeButton","onClose","closeButtonText","create","borderWidth","borderColor","borderRadius","padding","marginTop","width","backgroundColor","color","fontSize","textAlign"],"sources":["C:/Users/Asus/Desktop/sirFrancis-main/src/screens/ProfileIcon.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity, TextInput } from 'react-native';\r\n\r\nexport default function Profile({ route, navigation }) {\r\n  const { username } = route.params;\r\n  const [email, setEmail] = useState(''); // Initialize email state\r\n\r\n  const onSaveEmail = () => {\r\n    // Perform any validation if needed before saving the email\r\n    // For now, we'll simply set the email in the state\r\n    setEmail(email);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* Cart icon in the upper right corner */}\r\n      <TouchableOpacity style={styles.cartButton}>\r\n        <Text style={styles.cartIcon}>ðŸ›’</Text>\r\n      </TouchableOpacity>\r\n\r\n      <Text style={styles.title}>User Profile</Text>\r\n      <View style={styles.profileBox}>\r\n        <View style={styles.iconContainer}>\r\n          {/* Circle icon goes here */}\r\n          <Text style={styles.icon}>ðŸ“·</Text>\r\n        </View>\r\n        <Text style={styles.name}>{username}</Text>\r\n        <Text style={styles.contactNumber}>Contact: +1234567890</Text>\r\n\r\n        {/* Email input */}\r\n        <TextInput\r\n          placeholder=\"Enter Email\"\r\n          style={styles.emailInput}\r\n          onChangeText={text => setEmail(text)} // Update email state\r\n          value={email} // Display the email from state\r\n        />\r\n\r\n        {/* Save email button */}\r\n        <TouchableOpacity style={styles.saveButton} onPress={onSaveEmail}>\r\n          <Text style={styles.saveButtonText}>Save Email</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      {/* Add your profile content here */}\r\n      <TouchableOpacity style={styles.closeButton} onPress={onClose}>\r\n        <Text style={styles.closeButtonText}>Close</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  // Your styles here\r\n  emailInput: {\r\n    borderWidth: 1,\r\n    borderColor: 'gray',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginTop: 10,\r\n    width: '100%',\r\n  },\r\n  saveButton: {\r\n    marginTop: 10,\r\n    padding: 10,\r\n    backgroundColor: 'blue',\r\n    borderRadius: 5,\r\n  },\r\n  saveButtonText: {\r\n    color: 'white',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}