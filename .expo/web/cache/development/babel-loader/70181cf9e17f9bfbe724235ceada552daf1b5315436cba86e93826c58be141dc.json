{"ast":null,"code":"import { useEffect, useRef } from 'react';\nimport { makeRemote } from \"../core\";\nimport { isWeb, isJest } from \"../PlatformChecker\";\nimport WorkletEventHandler from \"../WorkletEventHandler\";\nexport var useEvent = function useEvent(handler) {\n  var eventNames = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var rebuild = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var initRef = useRef(null);\n  if (initRef.current === null) {\n    initRef.current = new WorkletEventHandler(handler, eventNames);\n  } else if (rebuild) {\n    initRef.current.updateWorklet(handler);\n  }\n  return initRef;\n};\nexport var useHandler = function useHandler(handlers, dependencies) {\n  var initRef = useRef(null);\n  if (initRef.current === null) {\n    initRef.current = {\n      context: makeRemote({}),\n      savedDependencies: []\n    };\n  }\n  useEffect(function () {\n    return function () {\n      initRef.current = null;\n    };\n  }, []);\n  var _initRef$current = initRef.current,\n    context = _initRef$current.context,\n    savedDependencies = _initRef$current.savedDependencies;\n  dependencies = buildDependencies(dependencies, handlers);\n  var doDependenciesDiffer = !areDependenciesEqual(dependencies, savedDependencies);\n  initRef.current.savedDependencies = dependencies;\n  var useWeb = isWeb() || isJest();\n  return {\n    context: context,\n    doDependenciesDiffer: doDependenciesDiffer,\n    useWeb: useWeb\n  };\n};\nexport function buildWorkletsHash(handlers) {\n  return Object.values(handlers).reduce(function (acc, worklet) {\n    return acc + worklet.__workletHash.toString();\n  }, '');\n}\nfunction buildDependencies(dependencies, handlers) {\n  var handlersList = Object.values(handlers).filter(function (handler) {\n    return handler !== undefined;\n  });\n  if (!dependencies) {\n    dependencies = handlersList.map(function (handler) {\n      return {\n        workletHash: handler.__workletHash,\n        closure: handler.__closure\n      };\n    });\n  } else {\n    dependencies.push(buildWorkletsHash(handlersList));\n  }\n  return dependencies;\n}\nfunction areDependenciesEqual(nextDeps, prevDeps) {\n  function is(x, y) {\n    return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y;\n  }\n  var objectIs = typeof Object.is === 'function' ? Object.is : is;\n  function areHookInputsEqual(nextDeps, prevDeps) {\n    if (!nextDeps || !prevDeps || prevDeps.length !== nextDeps.length) {\n      return false;\n    }\n    for (var i = 0; i < prevDeps.length; ++i) {\n      if (!objectIs(nextDeps[i], prevDeps[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return areHookInputsEqual(nextDeps, prevDeps);\n}\nexport function isAnimated(prop) {\n  'worklet';\n\n  if (Array.isArray(prop)) {\n    return prop.some(isAnimated);\n  } else if (typeof prop === 'object' && prop !== null) {\n    if (prop.onFrame !== undefined) {\n      return true;\n    } else {\n      return Object.values(prop).some(isAnimated);\n    }\n  }\n  return false;\n}\nexport function shallowEqual(a, b) {\n  'worklet';\n\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false;\n  }\n  for (var i = 0; i < aKeys.length; i++) {\n    if (a[aKeys[i]] !== b[aKeys[i]]) {\n      return false;\n    }\n  }\n  return true;\n}\nexport var validateAnimatedStyles = function validateAnimatedStyles(styles) {\n  'worklet';\n\n  if (typeof styles !== 'object') {\n    throw new Error(\"[Reanimated] `useAnimatedStyle` has to return an object, found \" + typeof styles + \" instead.\");\n  } else if (Array.isArray(styles)) {\n    throw new Error('[Reanimated] `useAnimatedStyle` has to return an object and cannot return static styles combined with dynamic ones. Please do merging where a component receives props.');\n  }\n};","map":{"version":3,"sources":["C:\\Users\\Asus\\Desktop\\sirFrancis-main\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\hook\\utils.ts"],"names":["useEffect","useRef","makeRemote","isWeb","isJest","WorkletEventHandler","useEvent","handler","eventNames","rebuild","initRef","current","updateWorklet","useHandler","handlers","dependencies","context","savedDependencies","buildDependencies","doDependenciesDiffer","areDependenciesEqual","useWeb","buildWorkletsHash","Object","values","reduce","acc","worklet","__workletHash","toString","handlersList","filter","undefined","map","workletHash","closure","__closure","push","nextDeps","prevDeps","is","x","y","objectIs","areHookInputsEqual","length","i","isAnimated","prop","Array","isArray","some","onFrame","shallowEqual","a","b","aKeys","keys","bKeys","validateAnimatedStyles","styles","Error"],"mappings":"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","sourcesContent":["import type { MutableRefObject } from 'react';\nimport { useEffect, useRef } from 'react';\nimport type {\n  __Context,\n  NativeEvent,\n  NestedObjectValues,\n  __WorkletFunction,\n  AnimationObject,\n} from '../commonTypes';\nimport type { AnimatedStyle } from '../helperTypes';\nimport { makeRemote } from '../core';\nimport { isWeb, isJest } from '../PlatformChecker';\nimport WorkletEventHandler from '../WorkletEventHandler';\nimport type { ContextWithDependencies, DependencyList } from './commonTypes';\nimport type { NativeSyntheticEvent } from 'react-native';\ninterface Handler<T, TContext extends __Context> extends __WorkletFunction {\n  (event: T, context: TContext): void;\n}\n\ninterface Handlers<T, TContext extends __Context> {\n  [key: string]: Handler<T, TContext> | undefined;\n}\n\ninterface UseHandlerContext<TContext extends __Context> {\n  context: TContext;\n  doDependenciesDiffer: boolean;\n  useWeb: boolean;\n}\n\n// TODO TYPESCRIPT This is a temporary type to get rid of .d.ts file.\ntype useEventType = <T extends object>(\n  handler: (e: T) => void,\n  eventNames?: string[],\n  rebuild?: boolean\n) => (e: NativeSyntheticEvent<T>) => void;\n\nexport const useEvent = function <T extends NativeEvent<T>>(\n  handler: (event: T) => void,\n  eventNames: string[] = [],\n  rebuild = false\n): MutableRefObject<WorkletEventHandler<T> | null> {\n  const initRef = useRef<WorkletEventHandler<T> | null>(null);\n  if (initRef.current === null) {\n    initRef.current = new WorkletEventHandler(handler, eventNames);\n  } else if (rebuild) {\n    initRef.current.updateWorklet(handler);\n  }\n\n  return initRef;\n  // TODO TYPESCRIPT This cast is to get rid of .d.ts file.\n} as unknown as useEventType;\n\n// TODO TYPESCRIPT This is a temporary type to get rid of .d.ts file.\ntype useHandlerType = <T, TContext extends __Context = Record<string, never>>(\n  handlers: Handlers<T, TContext>,\n  deps?: DependencyList\n) => { context: TContext; doDependenciesDiffer: boolean; useWeb: boolean };\n\nexport const useHandler = function <T, TContext extends __Context>(\n  handlers: Handlers<T, TContext>,\n  dependencies?: DependencyList\n): UseHandlerContext<TContext> {\n  const initRef = useRef<ContextWithDependencies<TContext> | null>(null);\n  if (initRef.current === null) {\n    initRef.current = {\n      context: makeRemote<TContext>({} as TContext),\n      savedDependencies: [],\n    };\n  }\n\n  useEffect(() => {\n    return () => {\n      initRef.current = null;\n    };\n  }, []);\n\n  const { context, savedDependencies } = initRef.current;\n\n  dependencies = buildDependencies(dependencies, handlers);\n\n  const doDependenciesDiffer = !areDependenciesEqual(\n    dependencies,\n    savedDependencies\n  );\n  initRef.current.savedDependencies = dependencies;\n  const useWeb = isWeb() || isJest();\n\n  return { context, doDependenciesDiffer, useWeb };\n  // TODO TYPESCRIPT This temporary cast is to get rid of .d.ts file.\n} as useHandlerType;\n\n// builds one big hash from multiple worklets' hashes\nexport function buildWorkletsHash(\n  handlers: Record<string, __WorkletFunction> | Array<__WorkletFunction>\n): string {\n  return Object.values(handlers).reduce(\n    (acc: string, worklet: __WorkletFunction) =>\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      acc + worklet.__workletHash!.toString(),\n    ''\n  );\n}\n\n// builds dependencies array for gesture handlers\nfunction buildDependencies(\n  dependencies: DependencyList,\n  handlers: Record<string, __WorkletFunction | undefined>\n): Array<unknown> {\n  const handlersList: __WorkletFunction[] = Object.values(handlers).filter(\n    (handler) => handler !== undefined\n  ) as __WorkletFunction[];\n  if (!dependencies) {\n    dependencies = handlersList.map((handler) => {\n      return {\n        workletHash: handler.__workletHash,\n        closure: handler.__closure,\n      };\n    });\n  } else {\n    dependencies.push(buildWorkletsHash(handlersList));\n  }\n\n  return dependencies;\n}\n\n// this is supposed to work as useEffect comparison\nfunction areDependenciesEqual(\n  nextDeps: DependencyList,\n  prevDeps: DependencyList\n): boolean {\n  function is(x: number, y: number) {\n    /* eslint-disable no-self-compare */\n    return (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y);\n    /* eslint-enable no-self-compare */\n  }\n  const objectIs: (nextDeps: unknown, prevDeps: unknown) => boolean =\n    typeof Object.is === 'function' ? Object.is : is;\n\n  function areHookInputsEqual(\n    nextDeps: DependencyList,\n    prevDeps: DependencyList\n  ): boolean {\n    if (!nextDeps || !prevDeps || prevDeps.length !== nextDeps.length) {\n      return false;\n    }\n    for (let i = 0; i < prevDeps.length; ++i) {\n      if (!objectIs(nextDeps[i], prevDeps[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  return areHookInputsEqual(nextDeps, prevDeps);\n}\n\nexport function isAnimated(prop: NestedObjectValues<AnimationObject>): boolean {\n  'worklet';\n  if (Array.isArray(prop)) {\n    return prop.some(isAnimated);\n  } else if (typeof prop === 'object' && prop !== null) {\n    if (prop.onFrame !== undefined) {\n      return true;\n    } else {\n      return Object.values(prop).some(isAnimated);\n    }\n  }\n  return false;\n}\n\nexport function shallowEqual(a: any, b: any) {\n  'worklet';\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false;\n  }\n  for (let i = 0; i < aKeys.length; i++) {\n    if (a[aKeys[i]] !== b[aKeys[i]]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport const validateAnimatedStyles = (styles: AnimatedStyle<any>): void => {\n  'worklet';\n  if (typeof styles !== 'object') {\n    throw new Error(\n      `[Reanimated] \\`useAnimatedStyle\\` has to return an object, found ${typeof styles} instead.`\n    );\n  } else if (Array.isArray(styles)) {\n    throw new Error(\n      '[Reanimated] `useAnimatedStyle` has to return an object and cannot return static styles combined with dynamic ones. Please do merging where a component receives props.'\n    );\n  }\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}