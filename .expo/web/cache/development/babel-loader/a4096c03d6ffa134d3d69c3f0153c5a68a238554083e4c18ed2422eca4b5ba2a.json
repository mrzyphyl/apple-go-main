{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar CartContext = createContext();\nexport function CartProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    cartItems = _useState2[0],\n    setCartItems = _useState2[1];\n  useEffect(function () {\n    var userId = getUserId();\n    var userCart = localStorage.getItem(\"userCart_\" + userId);\n    if (userCart) {\n      setCartItems(JSON.parse(userCart));\n    }\n  }, []);\n  useEffect(function () {\n    var userId = getUserId();\n    localStorage.setItem(\"userCart_\" + userId, JSON.stringify(cartItems));\n  }, [cartItems]);\n  var addToCart = function addToCart(item) {\n    setCartItems([].concat(_toConsumableArray(cartItems), [item]));\n  };\n  var removeFromCart = function removeFromCart(item) {\n    var updatedCart = cartItems.filter(function (cartItem) {\n      return cartItem.name !== item.name;\n    });\n    setCartItems(updatedCart);\n  };\n  var clearCart = function clearCart() {\n    setCartItems([]);\n  };\n  return _jsx(CartContext.Provider, {\n    value: {\n      cartItems: cartItems,\n      addToCart: addToCart,\n      removeFromCart: removeFromCart,\n      clearCart: clearCart\n    },\n    children: children\n  });\n}\nexport function useCart() {\n  return useContext(CartContext);\n}\nfunction getUserId() {\n  return 'user123';\n}","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","CartContext","CartProvider","_ref","children","_useState","_useState2","_slicedToArray","cartItems","setCartItems","userId","getUserId","userCart","localStorage","getItem","JSON","parse","setItem","stringify","addToCart","item","concat","_toConsumableArray","removeFromCart","updatedCart","filter","cartItem","name","clearCart","Provider","value","useCart"],"sources":["C:/Users/Asus/Desktop/sirFrancis-main/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst CartContext = createContext();\r\n\r\nexport function CartProvider({ children }) {\r\n  const [cartItems, setCartItems] = useState([]);\r\n\r\n  // Load the user-specific cart from local storage on component mount\r\n  useEffect(() => {\r\n    const userId = getUserId(); // Replace this with your authentication logic\r\n    const userCart = localStorage.getItem(`userCart_${userId}`);\r\n    if (userCart) {\r\n      setCartItems(JSON.parse(userCart));\r\n    }\r\n  }, []);\r\n\r\n  // Save the user-specific cart to local storage whenever it changes\r\n  useEffect(() => {\r\n    const userId = getUserId(); // Replace this with your authentication logic\r\n    localStorage.setItem(`userCart_${userId}`, JSON.stringify(cartItems));\r\n  }, [cartItems]);\r\n\r\n  const addToCart = (item) => {\r\n    setCartItems([...cartItems, item]);\r\n  };\r\n\r\n  const removeFromCart = (item) => {\r\n    const updatedCart = cartItems.filter((cartItem) => cartItem.name !== item.name);\r\n    setCartItems(updatedCart);\r\n  };\r\n\r\n  const clearCart = () => {\r\n    setCartItems([]);\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={{ cartItems, addToCart, removeFromCart, clearCart }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useCart() {\r\n  return useContext(CartContext);\r\n}\r\n\r\n// Replace this with your authentication logic to get the user's ID\r\nfunction getUserId() {\r\n  // Example: You might get the user ID from a token or your authentication context\r\n  return 'user123'; // Replace with the actual user ID retrieval logic\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAE9E,IAAMC,WAAW,GAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,SAASO,YAAYA,CAAAC,IAAA,EAAe;EAAA,IAAZC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EACrC,IAAAC,SAAA,GAAkCR,QAAQ,CAAC,EAAE,CAAC;IAAAS,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAG9BR,SAAS,CAAC,YAAM;IACd,IAAMY,MAAM,GAAGC,SAAS,CAAC,CAAC;IAC1B,IAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,eAAaJ,MAAQ,CAAC;IAC3D,IAAIE,QAAQ,EAAE;MACZH,YAAY,CAACM,IAAI,CAACC,KAAK,CAACJ,QAAQ,CAAC,CAAC;IACpC;EACF,CAAC,EAAE,EAAE,CAAC;EAGNd,SAAS,CAAC,YAAM;IACd,IAAMY,MAAM,GAAGC,SAAS,CAAC,CAAC;IAC1BE,YAAY,CAACI,OAAO,eAAaP,MAAM,EAAIK,IAAI,CAACG,SAAS,CAACV,SAAS,CAAC,CAAC;EACvE,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,IAAMW,SAAS,GAAG,SAAZA,SAASA,CAAIC,IAAI,EAAK;IAC1BX,YAAY,IAAAY,MAAA,CAAAC,kBAAA,CAAKd,SAAS,IAAEY,IAAI,EAAC,CAAC;EACpC,CAAC;EAED,IAAMG,cAAc,GAAG,SAAjBA,cAAcA,CAAIH,IAAI,EAAK;IAC/B,IAAMI,WAAW,GAAGhB,SAAS,CAACiB,MAAM,CAAC,UAACC,QAAQ;MAAA,OAAKA,QAAQ,CAACC,IAAI,KAAKP,IAAI,CAACO,IAAI;IAAA,EAAC;IAC/ElB,YAAY,CAACe,WAAW,CAAC;EAC3B,CAAC;EAED,IAAMI,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;IACtBnB,YAAY,CAAC,EAAE,CAAC;EAClB,CAAC;EAED,OACET,IAAA,CAACC,WAAW,CAAC4B,QAAQ;IAACC,KAAK,EAAE;MAAEtB,SAAS,EAATA,SAAS;MAAEW,SAAS,EAATA,SAAS;MAAEI,cAAc,EAAdA,cAAc;MAAEK,SAAS,EAATA;IAAU,CAAE;IAAAxB,QAAA,EAC9EA;EAAQ,CACW,CAAC;AAE3B;AAEA,OAAO,SAAS2B,OAAOA,CAAA,EAAG;EACxB,OAAOnC,UAAU,CAACK,WAAW,CAAC;AAChC;AAGA,SAASU,SAASA,CAAA,EAAG;EAEnB,OAAO,SAAS;AAClB"},"metadata":{},"sourceType":"module","externalDependencies":[]}