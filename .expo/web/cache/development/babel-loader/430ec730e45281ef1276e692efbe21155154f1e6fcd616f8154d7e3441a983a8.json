{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"contentContainerStyle\", \"style\", \"children\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport DrawerPositionContext from \"../utils/DrawerPositionContext\";\nfunction DrawerContentScrollView(_ref, ref) {\n  var contentContainerStyle = _ref.contentContainerStyle,\n    style = _ref.style,\n    children = _ref.children,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var drawerPosition = React.useContext(DrawerPositionContext);\n  var insets = useSafeAreaInsets();\n  var isRight = I18nManager.getConstants().isRTL ? drawerPosition === 'left' : drawerPosition === 'right';\n  return React.createElement(ScrollView, _extends({}, rest, {\n    ref: ref,\n    contentContainerStyle: [{\n      paddingTop: insets.top + 4,\n      paddingStart: !isRight ? insets.left : 0,\n      paddingEnd: isRight ? insets.right : 0\n    }, contentContainerStyle],\n    style: [styles.container, style]\n  }), children);\n}\nexport default React.forwardRef(DrawerContentScrollView);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["C:\\Users\\Asus\\Desktop\\sirFrancis-main\\node_modules\\@react-navigation\\drawer\\src\\views\\DrawerContentScrollView.tsx"],"names":["React","useSafeAreaInsets","DrawerPositionContext","DrawerContentScrollView","contentContainerStyle","style","children","rest","ref","drawerPosition","useContext","insets","isRight","I18nManager","getConstants","isRTL","paddingTop","top","paddingStart","left","paddingEnd","right","styles","container","forwardRef","StyleSheet","create","flex"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA,OAAA,WAAA;AAAA,OAAA,UAAA;AAAA,OAAA,UAAA;AAO9B,SAASC,iBAAiB,QAAQ,gCAAgC;AAElE,OAAOC,qBAAqB;AAM5B,SAASC,uBAAuB,CAAA,IAAA,EAE9BK,GAA2B,EAC3B;EAFA,IAAEJ,qBAAqB,GAAmC,IAAA,CAAxDA,qBAAqB;IAAEC,KAAK,GAA4B,IAAA,CAAjCA,KAAK;IAAEC,QAAQ,GAAkB,IAAA,CAA1BA,QAAQ;IAAKC,IAAAA,GAAAA,wBAAAA,CAAa,IAAA,EAAA,SAAA;EAG1D,IAAME,cAAc,GAAGT,KAAK,CAACU,UAAU,CAACR,qBAAqB,CAAC;EAC9D,IAAMS,MAAM,GAAGV,iBAAiB,CAAA,CAAE;EAElC,IAAMW,OAAO,GAAGC,WAAW,CAACC,YAAY,CAAA,CAAE,CAACC,KAAK,GAC5CN,cAAc,KAAK,MAAM,GACzBA,cAAc,KAAK,OAAO;EAE9B,OACE,KAAA,CAAA,aAAA,CAAC,UAAU,EAAA,QAAA,CAAA,CAAA,CAAA,EACLF,IAAI,EAAA;IACR,GAAG,EAAEC,GAAI;IACT,qBAAqB,EAAE,CACrB;MACEQ,UAAU,EAAEL,MAAM,CAACM,GAAG,GAAG,CAAC;MAC1BC,YAAY,EAAE,CAACN,OAAO,GAAGD,MAAM,CAACQ,IAAI,GAAG,CAAC;MACxCC,UAAU,EAAER,OAAO,GAAGD,MAAM,CAACU,KAAK,GAAG;IACvC,CAAC,EACDjB,qBAAqB,CACrB;IACF,KAAK,EAAE,CAACkB,MAAM,CAACC,SAAS,EAAElB,KAAK;EAAE,CAAA,CAAA,EAEhCC,QAAQ,CACE;AAEjB;AAEA,eAAeN,KAAK,CAACwB,UAAU,CAACrB,uBAAuB,CAAC;AAExD,IAAMmB,MAAM,GAAGG,UAAU,CAACC,MAAM,CAAC;EAC/BH,SAAS,EAAE;IACTI,IAAI,EAAE;EACR;AACF,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport {\n  I18nManager,\n  ScrollView,\n  ScrollViewProps,\n  StyleSheet,\n} from 'react-native';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport DrawerPositionContext from '../utils/DrawerPositionContext';\n\ntype Props = ScrollViewProps & {\n  children: React.ReactNode;\n};\n\nfunction DrawerContentScrollView(\n  { contentContainerStyle, style, children, ...rest }: Props,\n  ref?: React.Ref<ScrollView>\n) {\n  const drawerPosition = React.useContext(DrawerPositionContext);\n  const insets = useSafeAreaInsets();\n\n  const isRight = I18nManager.getConstants().isRTL\n    ? drawerPosition === 'left'\n    : drawerPosition === 'right';\n\n  return (\n    <ScrollView\n      {...rest}\n      ref={ref}\n      contentContainerStyle={[\n        {\n          paddingTop: insets.top + 4,\n          paddingStart: !isRight ? insets.left : 0,\n          paddingEnd: isRight ? insets.right : 0,\n        },\n        contentContainerStyle,\n      ]}\n      style={[styles.container, style]}\n    >\n      {children}\n    </ScrollView>\n  );\n}\n\nexport default React.forwardRef(DrawerContentScrollView);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}