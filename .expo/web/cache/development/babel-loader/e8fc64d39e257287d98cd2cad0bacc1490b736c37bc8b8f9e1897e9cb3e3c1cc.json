{"ast":null,"code":"import React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useNavigation } from '@react-navigation/native';\nimport { useCart } from \"../../CartContext\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function CartIcon() {\n  var navigation = useNavigation();\n  var _useCart = useCart(),\n    cartItems = _useCart.cartItems,\n    removeFromCart = _useCart.removeFromCart;\n  var calculateTotalPrice = function calculateTotalPrice() {\n    return cartItems.reduce(function (total, item) {\n      return total + parseFloat(item.price.slice(1));\n    }, 0);\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('Dashboard');\n      },\n      style: styles.backButton,\n      children: _jsx(Icon, {\n        name: \"arrow-left\",\n        size: 24,\n        color: \"black\"\n      })\n    }), cartItems.length > 0 ? _jsxs(ScrollView, {\n      style: styles.cartItemsContainer,\n      children: [cartItems.map(function (item, index) {\n        return _jsxs(View, {\n          style: styles.cartItem,\n          children: [_jsx(Text, {\n            style: styles.cartItemName,\n            children: item.name\n          }), _jsxs(Text, {\n            style: styles.cartItemPrice,\n            children: [\"$\", item.price]\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return removeFromCart(item);\n            },\n            style: styles.removeButton,\n            children: _jsx(Text, {\n              style: styles.removeButtonText,\n              children: \"Remove\"\n            })\n          })]\n        }, index);\n      }), _jsxs(Text, {\n        style: styles.cartTotal,\n        children: [\"Total: $\", calculateTotalPrice().toFixed(2)]\n      })]\n    }) : _jsx(Text, {\n      style: styles.emptyCartText,\n      children: \"Your cart is empty.\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  backButton: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n    marginTop: 15,\n    marginLeft: 10\n  },\n  cartTotal: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginTop: 10,\n    textAlign: 'center'\n  },\n  cartItemsContainer: {\n    marginTop: 200\n  },\n  cartItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10,\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    backgroundColor: '#F5F5F5',\n    borderRadius: 5\n  },\n  cartItemName: {\n    fontSize: 20,\n    flex: 1\n  },\n  cartItemPrice: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    marginRight: 20\n  },\n  removeButton: {\n    backgroundColor: '#FF5733',\n    padding: 5,\n    borderRadius: 5\n  },\n  removeButtonText: {\n    color: 'white',\n    fontSize: 12\n  },\n  emptyCartText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginTop: 200,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["React","TouchableOpacity","StyleSheet","Text","View","ScrollView","useNavigation","useCart","Icon","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CartIcon","navigation","_useCart","cartItems","removeFromCart","calculateTotalPrice","reduce","total","item","parseFloat","price","slice","children","onPress","navigate","style","styles","backButton","name","size","color","length","cartItemsContainer","map","index","cartItem","cartItemName","cartItemPrice","removeButton","removeButtonText","cartTotal","toFixed","emptyCartText","create","position","backgroundColor","marginTop","marginLeft","fontSize","fontWeight","textAlign","flexDirection","justifyContent","alignItems","marginBottom","paddingHorizontal","paddingVertical","borderRadius","flex","marginRight","padding"],"sources":["C:/Users/Asus/Desktop/sirFrancis-main/src/screens/CartIcon.js"],"sourcesContent":["import React from 'react';\r\nimport { TouchableOpacity, StyleSheet, Text, View, ScrollView } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { useCart } from '../../CartContext'; \r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n\r\nexport default function CartIcon() {\r\n  const navigation = useNavigation();\r\n  const { cartItems, removeFromCart } = useCart(); // Add a removeFromCart function\r\n\r\n  const calculateTotalPrice = () => {\r\n    return cartItems.reduce((total, item) => total + parseFloat(item.price.slice(1)), 0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TouchableOpacity\r\n        onPress={() => navigation.navigate('Dashboard')} \r\n        style={styles.backButton}\r\n      >\r\n        <Icon name=\"arrow-left\" size={24} color=\"black\" />\r\n      </TouchableOpacity>\r\n     \r\n      {cartItems.length > 0 ? (\r\n        <ScrollView style={styles.cartItemsContainer}>\r\n          {cartItems.map((item, index) => (\r\n            <View key={index} style={styles.cartItem}>\r\n              <Text style={styles.cartItemName}>{item.name}</Text>\r\n              <Text style={styles.cartItemPrice}>${item.price}</Text>\r\n              <TouchableOpacity onPress={() => removeFromCart(item)} style={styles.removeButton}>\r\n                <Text style={styles.removeButtonText}>Remove</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          ))}\r\n          <Text style={styles.cartTotal}>Total: ${calculateTotalPrice().toFixed(2)}</Text>\r\n        </ScrollView>\r\n      ) : (\r\n        <Text style={styles.emptyCartText}>Your cart is empty.</Text>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  backButton: {\r\n    position: 'absolute',\r\n    backgroundColor: 'transparent',\r\n    marginTop: 15,\r\n    marginLeft: 10,\r\n  },\r\n  cartTotal: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    marginTop: 10,\r\n    textAlign: 'center', // Center-align the total\r\n  },\r\n  cartItemsContainer: {\r\n    marginTop: 200,\r\n  },\r\n  cartItem: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 10,\r\n    backgroundColor: '#F5F5F5',\r\n    borderRadius: 5,\r\n  },\r\n  cartItemName: {\r\n    fontSize: 20,\r\n    flex: 1,\r\n  },\r\n  cartItemPrice: {\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n    marginRight: 20,\r\n  },\r\n  removeButton: {\r\n    backgroundColor: '#FF5733',\r\n    padding: 5,\r\n    borderRadius: 5,\r\n  },\r\n  removeButtonText: {\r\n    color: 'white',\r\n    fontSize: 12,\r\n  },\r\n  emptyCartText: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    marginTop: 200,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}