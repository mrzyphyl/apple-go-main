{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty2(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nimport NativeReanimatedModule from \"./NativeReanimated\";\nimport { registerEventHandler, unregisterEventHandler } from \"./core\";\nfunction jsListener(eventName, handler) {\n  return function (evt) {\n    handler(_objectSpread(_objectSpread({}, evt.nativeEvent), {}, {\n      eventName: eventName\n    }));\n  };\n}\nvar WorkletEventHandler = function () {\n  function WorkletEventHandler(worklet) {\n    _classCallCheck(this, WorkletEventHandler);\n    var eventNames = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    _defineProperty(this, \"worklet\", void 0);\n    _defineProperty(this, \"eventNames\", void 0);\n    _defineProperty(this, \"reattachNeeded\", void 0);\n    _defineProperty(this, \"listeners\", void 0);\n    _defineProperty(this, \"viewTag\", void 0);\n    _defineProperty(this, \"registrations\", void 0);\n    this.worklet = worklet;\n    this.eventNames = eventNames;\n    this.reattachNeeded = false;\n    this.listeners = {};\n    this.viewTag = undefined;\n    this.registrations = [];\n    if (!NativeReanimatedModule.native) {\n      this.listeners = eventNames.reduce(function (acc, eventName) {\n        acc[eventName] = jsListener(eventName, worklet);\n        return acc;\n      }, {});\n    }\n  }\n  _createClass(WorkletEventHandler, [{\n    key: \"updateWorklet\",\n    value: function updateWorklet(newWorklet) {\n      this.worklet = newWorklet;\n      this.reattachNeeded = true;\n    }\n  }, {\n    key: \"registerForEvents\",\n    value: function registerForEvents(viewTag, fallbackEventName) {\n      var _this = this;\n      this.viewTag = viewTag;\n      this.registrations = this.eventNames.map(function (eventName) {\n        return registerEventHandler(_this.worklet, eventName, viewTag);\n      });\n      if (this.registrations.length === 0 && fallbackEventName) {\n        this.registrations.push(registerEventHandler(this.worklet, fallbackEventName, viewTag));\n      }\n    }\n  }, {\n    key: \"registerForEventByName\",\n    value: function registerForEventByName(eventName) {\n      this.registrations.push(registerEventHandler(this.worklet, eventName));\n    }\n  }, {\n    key: \"unregisterFromEvents\",\n    value: function unregisterFromEvents() {\n      this.registrations.forEach(function (id) {\n        return unregisterEventHandler(id);\n      });\n      this.registrations = [];\n    }\n  }]);\n  return WorkletEventHandler;\n}();\nexport { WorkletEventHandler as default };","map":{"version":3,"sources":["C:\\Users\\Asus\\Desktop\\sirFrancis-main\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\WorkletEventHandler.ts"],"names":["NativeReanimatedModule","registerEventHandler","unregisterEventHandler","jsListener","eventName","handler","evt","nativeEvent","WorkletEventHandler","constructor","worklet","eventNames","_defineProperty","reattachNeeded","listeners","viewTag","undefined","registrations","native","reduce","acc","updateWorklet","newWorklet","registerForEvents","fallbackEventName","map","length","push","registerForEventByName","unregisterFromEvents","forEach","id"],"mappings":"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","sourcesContent":["import type { NativeEvent } from './commonTypes';\nimport NativeReanimatedModule from './NativeReanimated';\nimport { registerEventHandler, unregisterEventHandler } from './core';\n\nfunction jsListener<T extends NativeEvent<T>>(\n  eventName: string,\n  handler: (event: T) => void\n) {\n  return (evt: T) => {\n    handler({ ...evt.nativeEvent, eventName });\n  };\n}\n\nexport default class WorkletEventHandler<T extends NativeEvent<T>> {\n  worklet: (event: T) => void;\n  eventNames: string[];\n  reattachNeeded: boolean;\n  listeners: Record<string, (event: T) => void>;\n  viewTag: number | undefined;\n  registrations: number[];\n  constructor(worklet: (event: T) => void, eventNames: string[] = []) {\n    this.worklet = worklet;\n    this.eventNames = eventNames;\n    this.reattachNeeded = false;\n    this.listeners = {};\n    this.viewTag = undefined;\n    this.registrations = [];\n\n    if (!NativeReanimatedModule.native) {\n      this.listeners = eventNames.reduce(\n        (acc: Record<string, (event: T) => void>, eventName: string) => {\n          acc[eventName] = jsListener(eventName, worklet);\n          return acc;\n        },\n        {}\n      );\n    }\n  }\n\n  updateWorklet(newWorklet: (event: T) => void): void {\n    this.worklet = newWorklet;\n    this.reattachNeeded = true;\n  }\n\n  registerForEvents(viewTag: number, fallbackEventName?: string): void {\n    this.viewTag = viewTag;\n    this.registrations = this.eventNames.map((eventName) =>\n      registerEventHandler(this.worklet, eventName, viewTag)\n    );\n    if (this.registrations.length === 0 && fallbackEventName) {\n      this.registrations.push(\n        registerEventHandler(this.worklet, fallbackEventName, viewTag)\n      );\n    }\n  }\n\n  registerForEventByName(eventName: string) {\n    this.registrations.push(registerEventHandler(this.worklet, eventName));\n  }\n\n  unregisterFromEvents(): void {\n    this.registrations.forEach((id) => unregisterEventHandler(id));\n    this.registrations = [];\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}