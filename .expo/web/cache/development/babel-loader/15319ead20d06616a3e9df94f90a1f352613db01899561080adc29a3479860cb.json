{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { useNavigation } from '@react-navigation/native';\nimport { useCart } from \"../../CartContext\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function CartIcon() {\n  var navigation = useNavigation();\n  var _useCart = useCart(),\n    cartItems = _useCart.cartItems,\n    removeFromCart = _useCart.removeFromCart,\n    resetCart = _useCart.resetCart,\n    clearCart = _useCart.clearCart;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoading = _useState2[0],\n    setIsLoading = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isOrderOnTheWay = _useState4[0],\n    setIsOrderOnTheWay = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    showSuccessModal = _useState6[0],\n    setShowSuccessModal = _useState6[1];\n  var calculateTotalPrice = function calculateTotalPrice() {\n    return cartItems.reduce(function (total, item) {\n      return total + parseFloat(item.price.slice(1));\n    }, 0);\n  };\n  var handleBuy = function handleBuy() {\n    if (cartItems.length > 0) {\n      setIsLoading(true);\n      setTimeout(function () {\n        setIsLoading(false);\n        setIsOrderOnTheWay(true);\n        clearCart();\n        setShowSuccessModal(true);\n        setTimeout(function () {\n          setShowSuccessModal(false);\n        }, 2000);\n      }, 2000);\n    } else {\n      Alert.alert('Empty Cart', 'Your cart is empty. Please add items to your cart before purchasing.');\n    }\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('Dashboard');\n      },\n      style: styles.backButton,\n      children: _jsx(Icon, {\n        name: \"arrow-left\",\n        size: 24,\n        color: \"black\"\n      })\n    }), cartItems.length > 0 ? _jsxs(ScrollView, {\n      style: styles.cartItemsContainer,\n      children: [_jsxs(View, {\n        style: styles.cartTitle,\n        children: [_jsx(Text, {\n          style: styles.cartTitleText,\n          children: \"CART\"\n        }), _jsx(View, {\n          style: styles.cartTitleLine\n        })]\n      }), cartItems.map(function (item, index) {\n        return _jsxs(View, {\n          style: styles.cartItem,\n          children: [_jsx(Text, {\n            style: styles.cartItemName,\n            children: item.name\n          }), _jsx(Text, {\n            style: styles.cartItemPrice,\n            children: item.price\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return removeFromCart(item);\n            },\n            style: styles.removeButton,\n            children: _jsx(Text, {\n              style: styles.removeButtonText,\n              children: \"Remove\"\n            })\n          })]\n        }, index);\n      }), _jsxs(Text, {\n        style: styles.cartTotal,\n        children: [\"Total: $\", calculateTotalPrice().toFixed(2)]\n      }), isLoading ? _jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#007BFF\"\n      }) : isOrderOnTheWay ? _jsx(Text, {\n        style: styles.orderOnTheWayText,\n        children: \"Your order is on the way!\"\n      }) : _jsx(Button, {\n        title: \"Buy\",\n        onPress: handleBuy\n      })]\n    }) : _jsx(Text, {\n      style: styles.emptyCartText,\n      children: \"Your cart is empty.\"\n    }), _jsx(Modal, {\n      animationType: \"fade\",\n      transparent: true,\n      visible: showSuccessModal,\n      onRequestClose: function onRequestClose() {\n        setShowSuccessModal(false);\n      },\n      children: _jsx(View, {\n        style: styles.modalContainer,\n        children: _jsx(Text, {\n          style: styles.successModalText,\n          children: \"Your order is on the way!\"\n        })\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.7)'\n  },\n  successModalText: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'green',\n    padding: 20,\n    borderRadius: 10,\n    backgroundColor: 'white'\n  }\n});","map":{"version":3,"names":["React","useState","TouchableOpacity","StyleSheet","Text","View","ScrollView","Button","Alert","ActivityIndicator","Modal","useNavigation","useCart","Icon","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CartIcon","navigation","_useCart","cartItems","removeFromCart","resetCart","clearCart","_useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","isOrderOnTheWay","setIsOrderOnTheWay","_useState5","_useState6","showSuccessModal","setShowSuccessModal","calculateTotalPrice","reduce","total","item","parseFloat","price","slice","handleBuy","length","setTimeout","alert","children","onPress","navigate","style","styles","backButton","name","size","color","cartItemsContainer","cartTitle","cartTitleText","cartTitleLine","map","index","cartItem","cartItemName","cartItemPrice","removeButton","removeButtonText","cartTotal","toFixed","orderOnTheWayText","title","emptyCartText","animationType","transparent","visible","onRequestClose","modalContainer","successModalText","create","flex","justifyContent","alignItems","backgroundColor","fontSize","fontWeight","padding","borderRadius"],"sources":["C:/Users/Asus/Desktop/sirFrancis-main/src/screens/CartIcon.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { TouchableOpacity, StyleSheet, Text, View, ScrollView, Button, Alert, ActivityIndicator, Modal } from 'react-native'; // Import Modal\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { useCart } from '../../CartContext';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n\r\nexport default function CartIcon() {\r\n  const navigation = useNavigation();\r\n  const { cartItems, removeFromCart, resetCart, clearCart } = useCart();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isOrderOnTheWay, setIsOrderOnTheWay] = useState(false);\r\n  const [showSuccessModal, setShowSuccessModal] = useState(false); // Add a state variable for the modal\r\n\r\n  const calculateTotalPrice = () => {\r\n    return cartItems.reduce((total, item) => total + parseFloat(item.price.slice(1)), 0);\r\n  };\r\n\r\n  const handleBuy = () => {\r\n    if (cartItems.length > 0) {\r\n      setIsLoading(true);\r\n\r\n      setTimeout(() => {\r\n        setIsLoading(false);\r\n        setIsOrderOnTheWay(true);\r\n        clearCart(); // Clear the cart if the purchase is complete\r\n\r\n        // Show the success modal\r\n        setShowSuccessModal(true);\r\n\r\n        // Hide the modal after 2 seconds\r\n        setTimeout(() => {\r\n          setShowSuccessModal(false);\r\n        }, 2000);\r\n      }, 2000); // Simulate a 2-second purchase process\r\n    } else {\r\n      // Cart is empty, show an alert\r\n      Alert.alert('Empty Cart', 'Your cart is empty. Please add items to your cart before purchasing.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TouchableOpacity\r\n        onPress={() => navigation.navigate('Dashboard')}\r\n        style={styles.backButton}\r\n      >\r\n        <Icon name=\"arrow-left\" size={24} color=\"black\" />\r\n      </TouchableOpacity>\r\n\r\n      {cartItems.length > 0 ? (\r\n        <ScrollView style={styles.cartItemsContainer}>\r\n          <View style={styles.cartTitle}>\r\n            <Text style={styles.cartTitleText}>CART</Text>\r\n            <View style={styles.cartTitleLine}></View>\r\n          </View>\r\n          {cartItems.map((item, index) => (\r\n            <View key={index} style={styles.cartItem}>\r\n              <Text style={styles.cartItemName}>{item.name}</Text>\r\n              <Text style={styles.cartItemPrice}>{item.price}</Text>\r\n              <TouchableOpacity onPress={() => removeFromCart(item)} style={styles.removeButton}>\r\n                <Text style={styles.removeButtonText}>Remove</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          ))}\r\n          <Text style={styles.cartTotal}>Total: ${calculateTotalPrice().toFixed(2)}</Text>\r\n          {isLoading ? (\r\n            <ActivityIndicator size=\"large\" color=\"#007BFF\" />\r\n          ) : isOrderOnTheWay ? (\r\n            <Text style={styles.orderOnTheWayText}>Your order is on the way!</Text>\r\n          ) : (\r\n            <Button title=\"Buy\" onPress={handleBuy} />\r\n          )}\r\n        </ScrollView>\r\n      ) : (\r\n        <Text style={styles.emptyCartText}>Your cart is empty.</Text>\r\n      )}\r\n\r\n      {/* Success Modal */}\r\n      <Modal\r\n        animationType=\"fade\"\r\n        transparent={true}\r\n        visible={showSuccessModal}\r\n        onRequestClose={() => {\r\n          setShowSuccessModal(false);\r\n        }}\r\n      >\r\n        <View style={styles.modalContainer}>\r\n          <Text style={styles.successModalText}>Your order is on the way!</Text>\r\n        </View>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  // Existing styles...\r\n\r\n  // Add styles for the modal\r\n  modalContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.7)',\r\n  },\r\n  successModalText: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: 'green',\r\n    padding: 20,\r\n    borderRadius: 10,\r\n    backgroundColor: 'white',\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}