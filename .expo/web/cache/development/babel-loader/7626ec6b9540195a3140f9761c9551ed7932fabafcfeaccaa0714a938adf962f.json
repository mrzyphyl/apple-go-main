{"ast":null,"code":"import React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function FastFoodBox(_ref) {\n  var scaleValue = _ref.scaleValue,\n    isEditing = _ref.isEditing,\n    handlePlusButtonPress = _ref.handlePlusButtonPress,\n    editableText = _ref.editableText,\n    setEditableText = _ref.setEditableText,\n    navigation = _ref.navigation;\n  return _jsx(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('Seller');\n    },\n    children: _jsxs(Animated.View, {\n      style: [styles.brandButton, {\n        transform: [{\n          scale: scaleValue\n        }]\n      }],\n      children: [_jsxs(View, {\n        children: [_jsx(TouchableOpacity, {\n          style: styles.plusButton,\n          onPress: handlePlusButtonPress,\n          children: _jsx(Text, {\n            style: styles.editButtonText,\n            children: isEditing ? \"Save\" : \"Edit\"\n          })\n        }), isEditing ? _jsx(TextInput, {\n          style: styles.editableText,\n          onChangeText: function onChangeText(text) {\n            return setEditableText(text);\n          },\n          value: editableText\n        }) : _jsx(Text, {\n          style: styles.brandButtonText1,\n          children: editableText\n        })]\n      }), _jsx(Icon, {\n        name: \"arrow-right\",\n        size: 30,\n        color: \"#007BFF\"\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  brandButton: {\n    backgroundColor: 'rgba(255, 255, 255, 0.2)',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: 10,\n    borderRadius: 1.1,\n    marginBottom: 20,\n    height: 180,\n    width: 300,\n    borderWidth: 0.1,\n    shadowOffset: {\n      width: 4,\n      height: 5\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 5,\n    elevation: 1\n  },\n  brandButtonText1: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#007BFF'\n  },\n  editableText: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#007BFF',\n    borderColor: 'transparent'\n  },\n  plusButton: {\n    backgroundColor: '#007BFF',\n    padding: 5,\n    borderRadius: 5,\n    width: 50,\n    alignItems: 'center'\n  },\n  editButtonText: {\n    color: 'white'\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","TextInput","StyleSheet","Animated","Icon","jsx","_jsx","jsxs","_jsxs","FastFoodBox","_ref","scaleValue","isEditing","handlePlusButtonPress","editableText","setEditableText","navigation","onPress","navigate","children","style","styles","brandButton","transform","scale","plusButton","editButtonText","onChangeText","text","value","brandButtonText1","name","size","color","create","backgroundColor","flexDirection","alignItems","justifyContent","padding","borderRadius","marginBottom","height","width","borderWidth","shadowOffset","shadowOpacity","shadowRadius","elevation","fontSize","fontWeight","borderColor"],"sources":["C:/Users/Asus/Desktop/sirFrancis-main/src/screens/FastFoodBox.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TouchableOpacity, TextInput, StyleSheet, Animated } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n\r\nexport default function FastFoodBox({\r\n  scaleValue,\r\n  isEditing,\r\n  handlePlusButtonPress,\r\n  editableText,\r\n  setEditableText,\r\n  navigation,\r\n}) {\r\n  return (\r\n    <TouchableOpacity onPress={() => navigation.navigate('Seller')}>\r\n      <Animated.View style={[styles.brandButton, { transform: [{ scale: scaleValue }] }]}>\r\n        <View>\r\n          <TouchableOpacity style={styles.plusButton} onPress={handlePlusButtonPress}>\r\n            <Text style={styles.editButtonText}>{isEditing ? \"Save\" : \"Edit\"}</Text>\r\n          </TouchableOpacity>\r\n          {isEditing ? (\r\n            <TextInput\r\n              style={styles.editableText}\r\n              onChangeText={text => setEditableText(text)}\r\n              value={editableText}\r\n            />\r\n          ) : (\r\n            <Text style={styles.brandButtonText1}>{editableText}</Text>\r\n          )}\r\n        </View>\r\n        <Icon name=\"arrow-right\" size={30} color=\"#007BFF\" />\r\n      </Animated.View>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  brandButton: {\r\n    backgroundColor: 'rgba(255, 255, 255, 0.2)',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    padding: 10,\r\n    borderRadius: 1.1,\r\n    marginBottom: 20,\r\n    height: 180,\r\n    width: 300,\r\n    borderWidth: 0.1,\r\n    shadowOffset: { width: 4, height: 5 },\r\n    shadowOpacity: 0.5,\r\n    shadowRadius: 5,\r\n    elevation: 1,\r\n  },\r\n  brandButtonText1: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#007BFF',\r\n  },\r\n  editableText: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#007BFF',\r\n    borderColor: 'transparent',\r\n  },\r\n  plusButton: {\r\n    backgroundColor: '#007BFF',\r\n    padding: 5,\r\n    borderRadius: 5,\r\n    width: 50,\r\n    alignItems: 'center',\r\n  },\r\n  editButtonText: {\r\n    color: 'white',\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}