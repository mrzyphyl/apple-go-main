{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport * as React from \"react\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Axios from \"axios\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function RegisterScreen() {\n  var navigation = useNavigation();\n  var register = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var response = yield Axios.post(\"http://localhost:8000/data/register\", {\n          username: data1.username,\n          password: data1.password,\n          confirmPassword: data1.confirmPassword\n        });\n        if (response.status === 200) {\n          Alert.alert(\"Registration successful!\");\n          navigation.navigate(\"LoginScreen\");\n        }\n      } catch (error) {\n        Alert.alert(\"Error!\", error.message);\n      }\n    });\n    return function register() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var _React$useState = React.useState({\n      username: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      isValidUser: true,\n      isValidPassword: true\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    data1 = _React$useState2[0],\n    setData = _React$useState2[1];\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.goBack();\n      },\n      style: styles.backButton,\n      children: _jsx(Icon, {\n        name: \"arrow-left\",\n        size: 24,\n        color: \"white\"\n      })\n    }), _jsxs(View, {\n      style: styles.View1,\n      children: [_jsx(Text, {\n        style: styles.userdata,\n        children: \"Username:\"\n      }), _jsx(TextInput, {\n        placeholder: \"Enter Username\",\n        style: styles.username,\n        onChangeText: function onChangeText(e) {\n          return setUsername(e);\n        }\n      }), _jsx(Text, {\n        style: styles.userdata,\n        children: \"Password\"\n      }), _jsx(TextInput, {\n        placeholder: \"Password\",\n        style: styles.username,\n        onChangeText: function onChangeText(e) {\n          return setPassword(e);\n        },\n        secureTextEntry: true\n      }), _jsx(Text, {\n        style: styles.userdata,\n        children: \"Confirm Password\"\n      }), _jsx(TextInput, {\n        placeholder: \"Confirm Password\",\n        style: styles.username,\n        onChangeText: function onChangeText(e) {\n          return setConfirmPassword(e);\n        },\n        secureTextEntry: true\n      }), _jsx(TouchableOpacity, {\n        children: _jsx(LinearGradient, {\n          colors: [\"#f72855\", \"#f72855\"],\n          style: styles.LoginUser,\n          children: _jsx(Text, {\n            style: styles.Button1,\n            onPress: register,\n            children: \"SignUp\"\n          })\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    height: \"100%\",\n    width: \"100%\",\n    flex: '1',\n    width: '100%',\n    backgroundColor: 'rgb(255, 190, 123)'\n  },\n  View1: {\n    marginTop: 60,\n    backgroundColor: \"rgba(255, 190, 123, 0.5)\",\n    height: 700,\n    paddingTop: 80,\n    alignContent: 'center',\n    alignSelf: \"center\",\n    width: \"95%\",\n    borderRadius: 20\n  },\n  backButton: {\n    position: \"absolute\",\n    top: 20,\n    left: 20,\n    zIndex: 1\n  },\n  username: {\n    fontFamily: \"sans-serif\",\n    alignSelf: \"center\",\n    padding: 18,\n    textAlign: \"center\",\n    borderBottomColor: \"rgba(100,50,40,0.2)\",\n    borderBottomWidth: 1,\n    borderWidth: 2,\n    borderColor: \"rgba(100,50,40,0.2)\",\n    width: \"70%\",\n    backgroundColor: \"#d8dbd7\",\n    justifyContent: \"center\",\n    fontSize: 20,\n    borderRadius: 10\n  },\n  userdata: {\n    paddingTop: 20,\n    paddingBottom: 10,\n    alignSelf: \"center\",\n    color: \"#eff2e9\",\n    fontSize: 20,\n    justifyContent: \"center\"\n  },\n  LoginUser: {\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    alignSelf: \"center\",\n    marginTop: 30,\n    padding: 15,\n    borderRadius: 10,\n    width: \"70%\"\n  },\n  Button1: {\n    alignSelf: \"center\",\n    fontSize: 20,\n    color: \"white\"\n  }\n});","map":{"version":3,"names":["React","LinearGradient","Text","TextInput","View","StyleSheet","TouchableOpacity","Alert","Axios","useNavigation","Icon","jsx","_jsx","jsxs","_jsxs","RegisterScreen","navigation","register","_ref","_asyncToGenerator","response","post","username","data1","password","confirmPassword","status","alert","navigate","error","message","apply","arguments","_React$useState","useState","isValidUser","isValidPassword","_React$useState2","_slicedToArray","setData","style","styles","container","children","onPress","goBack","backButton","name","size","color","View1","userdata","placeholder","onChangeText","e","setUsername","setPassword","secureTextEntry","setConfirmPassword","colors","LoginUser","Button1","create","height","width","flex","backgroundColor","marginTop","paddingTop","alignContent","alignSelf","borderRadius","position","top","left","zIndex","fontFamily","padding","textAlign","borderBottomColor","borderBottomWidth","borderWidth","borderColor","justifyContent","fontSize","paddingBottom"],"sources":["C:/Users/Asus/Desktop/sirFrancis-main/src/screens/RegisterScreen.js"],"sourcesContent":["import * as React from \"react\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { Text, TextInput, View, StyleSheet, TouchableOpacity, Alert } from \"react-native\";\nimport Axios from \"axios\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\n\nexport default function RegisterScreen() {\n  const navigation = useNavigation();\n\n  const register = async () => {\n    try {\n      const response = await Axios.post(\"http://localhost:8000/data/register\", {\n        username: data1.username,\n        password: data1.password,\n        confirmPassword: data1.confirmPassword,\n      });\n\n      if (response.status === 200) {\n        Alert.alert(\"Registration successful!\");\n        navigation.navigate(\"LoginScreen\");\n      }\n    } catch (error) {\n      Alert.alert(\"Error!\", error.message);\n    }\n  };\n\n  const [data1, setData] = React.useState({\n    username: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    isValidUser: true,\n    isValidPassword: true,\n  });\n\n  // ... other code ...\n\n  return (\n    <View style={styles.container}>\n      <TouchableOpacity\n        onPress={() => navigation.goBack()}\n        style={styles.backButton}\n      >\n        <Icon name=\"arrow-left\" size={24} color=\"white\" />\n      </TouchableOpacity>\n      <View style={styles.View1}>\n        <Text style={styles.userdata}>Username:</Text>\n        <TextInput\n          placeholder=\"Enter Username\"\n          style={styles.username}\n          onChangeText={(e) => setUsername(e)}\n        />\n        <Text style={styles.userdata}>Password</Text>\n        <TextInput\n          placeholder=\"Password\"\n          style={styles.username}\n          onChangeText={(e) => setPassword(e)}\n          secureTextEntry\n        />\n        <Text style={styles.userdata}>Confirm Password</Text>\n        <TextInput\n          placeholder=\"Confirm Password\"\n          style={styles.username}\n          onChangeText={(e) => setConfirmPassword(e)}\n          secureTextEntry\n        />\n        <TouchableOpacity>\n          <LinearGradient\n            colors={[\"#f72855\", \"#f72855\"]}\n            style={styles.LoginUser}\n          >\n            <Text style={styles.Button1} onPress={register}>\n              SignUp\n            </Text>\n          </LinearGradient>\n        </TouchableOpacity>\n      </View>\n    </View>\n  \n    );\n  }\n\n  const styles = StyleSheet.create({\n    container: {\n      height: \"100%\",\n      width: \"100%\",\n      flex: '1',\n      width: '100%',\n      backgroundColor: 'rgb(255, 190, 123)',\n    },\n    View1: {\n      marginTop: 60,\n      backgroundColor: \"rgba(255, 190, 123, 0.5)\", \n      height: 700,\n      paddingTop: 80,\n      alignContent: 'center',\n      alignSelf: \"center\",\n      width: \"95%\",\n      borderRadius: 20,\n    },\n    backButton: {\n      position: \"absolute\",\n      top: 20,\n      left: 20,\n      zIndex: 1,\n    },\n    username: {\n      fontFamily: \"sans-serif\", \n      alignSelf: \"center\",\n      padding: 18,\n      textAlign: \"center\",\n      borderBottomColor: \"rgba(100,50,40,0.2)\",\n      borderBottomWidth: 1,\n      borderWidth: 2,\n      borderColor: \"rgba(100,50,40,0.2)\",\n      width: \"70%\",\n      backgroundColor: \"#d8dbd7\",\n      justifyContent: \"center\",\n      fontSize: 20,\n      borderRadius: 10,\n    },\n    userdata: {\n      paddingTop: 20,\n      paddingBottom: 10,\n      alignSelf: \"center\",\n      color: \"#eff2e9\",\n      fontSize: 20,\n      justifyContent: \"center\",\n    },\n    LoginUser: {\n      justifyContent: \"center\",\n      alignContent: \"center\",\n      alignSelf: \"center\",\n      marginTop: 30,\n      padding: 15,\n      borderRadius: 10,\n      width: \"70%\",\n    },\n    Button1: {\n      alignSelf: \"center\",\n      fontSize: 20,\n      color: \"white\",\n    },\n  });\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}