{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nimport NativeEventEmitter from \"react-native-web/dist/exports/NativeEventEmitter\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport { nativeShouldBeMock } from \"../reanimated2/PlatformChecker\";\nexport var JSPropUpdater = function () {\n  function JSPropUpdater() {\n    _classCallCheck(this, JSPropUpdater);\n    _defineProperty(this, \"_reanimatedEventEmitter\", void 0);\n    var reanimatedModule;\n    if (nativeShouldBeMock()) {\n      reanimatedModule = JSPropUpdater._reanimatedModuleMock;\n    } else {\n      reanimatedModule = NativeModules.ReanimatedModule;\n    }\n    this._reanimatedEventEmitter = new NativeEventEmitter(reanimatedModule);\n  }\n  _createClass(JSPropUpdater, [{\n    key: \"addOnJSPropsChangeListener\",\n    value: function addOnJSPropsChangeListener(animatedComponent) {\n      var viewTag = findNodeHandle(animatedComponent);\n      JSPropUpdater._tagToComponentMapping.set(viewTag, animatedComponent);\n      if (JSPropUpdater._tagToComponentMapping.size === 1) {\n        this._reanimatedEventEmitter.addListener('onReanimatedPropsChange', JSPropUpdater._listener);\n      }\n    }\n  }, {\n    key: \"removeOnJSPropsChangeListener\",\n    value: function removeOnJSPropsChangeListener(animatedComponent) {\n      var viewTag = findNodeHandle(animatedComponent);\n      JSPropUpdater._tagToComponentMapping.delete(viewTag);\n      if (JSPropUpdater._tagToComponentMapping.size === 0) {\n        this._reanimatedEventEmitter.removeAllListeners('onReanimatedPropsChange');\n      }\n    }\n  }], [{\n    key: \"_listener\",\n    value: function _listener(data) {\n      var component = JSPropUpdater._tagToComponentMapping.get(data.viewTag);\n      component && component._updateFromNative(data.props);\n    }\n  }]);\n  return JSPropUpdater;\n}();\n_defineProperty(JSPropUpdater, \"_tagToComponentMapping\", new Map());\n_defineProperty(JSPropUpdater, \"_reanimatedModuleMock\", {\n  addListener: function addListener() {\n    return _regeneratorRuntime.async(function addListener$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n        case \"end\":\n          return _context.stop();\n      }\n    }, null, null, null, Promise);\n  },\n  removeListeners: function removeListeners() {\n    return _regeneratorRuntime.async(function removeListeners$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, null, null, null, Promise);\n  }\n});","map":{"version":3,"sources":["C:\\Users\\Asus\\Desktop\\sirFrancis-main\\node_modules\\react-native-reanimated\\lib\\module\\createAnimatedComponent\\JSPropUpdater.ts"],"names":["nativeShouldBeMock","JSPropUpdater","Map","_defineProperty","addListener","removeListeners","data","component","_tagToComponentMapping","get","viewTag","_updateFromNative","props","constructor","reanimatedModule","_reanimatedModuleMock","NativeModules","ReanimatedModule","_reanimatedEventEmitter","NativeEventEmitter","addOnJSPropsChangeListener","animatedComponent","findNodeHandle","set","size","_listener","removeOnJSPropsChangeListener","delete","removeAllListeners"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,SAASA,kBAAkB;AAQ3B,WAAaC,aAAa;EAiBxBY,SAAAA,cAAAA,EAAcV;IAAAA,eAAAA,OAAAA,aAAAA;IAAAA,eAAAA,CAAAA,IAAAA,EAAAA,yBAAAA,EAAAA,KAAAA,CAAAA,CAAAA;IACZ,IAAIW,gBAA4D;IAChE,IAAId,kBAAkB,CAAA,CAAE,EAAE;MACxBc,gBAAgB,GAAGb,aAAa,CAACc,qBAAqB;IACxD,CAAC,MAAM;MACLD,gBAAgB,GAAGE,aAAa,CAACC,gBAAgB;IACnD;IACA,IAAI,CAACC,uBAAuB,GAAG,IAAIC,kBAAkB,CAACL,gBAAgB,CAAC;EACzE;EAAA,YAAA,CAAA,aAAA;IAAA,GAAA;IAAA,KAAA,EAEOM,SAAAA,2BACLC,iBAAoD,EACpD;MACA,IAAMX,OAAO,GAAGY,cAAc,CAACD,iBAAiB,CAAC;MACjDpB,aAAa,CAACO,sBAAsB,CAACe,GAAG,CAACb,OAAO,EAAEW,iBAAiB,CAAC;MACpE,IAAIpB,aAAa,CAACO,sBAAsB,CAACgB,IAAI,KAAK,CAAC,EAAE;QACnD,IAAI,CAACN,uBAAuB,CAACd,WAAW,CACtC,yBAAyB,EACzBH,aAAa,CAACwB,SAAS,CACxB;MACH;IACF;EAAA;IAAA,GAAA;IAAA,KAAA,EAEOC,SAAAA,8BACLL,iBAAoD,EACpD;MACA,IAAMX,OAAO,GAAGY,cAAc,CAACD,iBAAiB,CAAC;MACjDpB,aAAa,CAACO,sBAAsB,CAACmB,MAAM,CAACjB,OAAO,CAAC;MACpD,IAAIT,aAAa,CAACO,sBAAsB,CAACgB,IAAI,KAAK,CAAC,EAAE;QACnD,IAAI,CAACN,uBAAuB,CAACU,kBAAkB,CAC7C,yBAAyB,CAC1B;MACH;IACF;EAAA;IAAA,GAAA;IAAA,KAAA,EAtCA,SAAA,UAAyBtB,IAAkB,EAAE;MAC3C,IAAMC,SAAS,GAAGN,aAAa,CAACO,sBAAsB,CAACC,GAAG,CAACH,IAAI,CAACI,OAAO,CAAC;MACxEH,SAAS,IAAIA,SAAS,CAACI,iBAAiB,CAACL,IAAI,CAACM,KAAK,CAAC;IACtD;EAAA;EAAA,OAAA,aAAA;AAAA;AAoCDT,eAAAA,CAnDYF,aAAa,EAAA,wBAAA,EACgB,IAAIC,GAAG,CAAA,CAAEC,CAAAA;AAAAA,eAAAA,CADtCF,aAAa,EAAA,uBAAA,EAGe;EAC/BG,WAAWA,WAAAA,YAAAA;IAAAA,OAAAA,mBAAAA,CAAAA,KAAAA,UAAAA,aAAAA,QAAAA;MAAAA,kBAAAA,QAAAA,CAAAA,IAAAA,GAAAA,QAAAA,CAAAA,IAAAA;QAAAA;QAAAA;UAAAA,OAAAA,QAAAA,CAAAA,IAAAA;MAAAA;IAAAA,qBAAAA,OAAAA;EAAAA;EAGXC,eAAeA,WAAAA,gBAAAA;IAAAA,OAAAA,mBAAAA,CAAAA,KAAAA,UAAAA,iBAAAA,SAAAA;MAAAA,kBAAAA,SAAAA,CAAAA,IAAAA,GAAAA,SAAAA,CAAAA,IAAAA;QAAAA;QAAAA;UAAAA,OAAAA,SAAAA,CAAAA,IAAAA;MAAAA;IAAAA,qBAAAA,OAAAA;EAAAA;AAGvB,CAAC,CAAA","sourcesContent":["import {\n  NativeEventEmitter,\n  NativeModules,\n  findNodeHandle,\n} from 'react-native';\nimport { nativeShouldBeMock } from '../reanimated2/PlatformChecker';\nimport type { StyleProps } from '../reanimated2';\n\ninterface ListenerData {\n  viewTag: number;\n  props: StyleProps;\n}\n\nexport class JSPropUpdater {\n  private static _tagToComponentMapping = new Map();\n  private _reanimatedEventEmitter: NativeEventEmitter;\n  private static _reanimatedModuleMock = {\n    async addListener(): Promise<void> {\n      // noop\n    },\n    async removeListeners(): Promise<void> {\n      // noop\n    },\n  };\n\n  private static _listener(data: ListenerData) {\n    const component = JSPropUpdater._tagToComponentMapping.get(data.viewTag);\n    component && component._updateFromNative(data.props);\n  }\n\n  constructor() {\n    let reanimatedModule: typeof JSPropUpdater._reanimatedModuleMock;\n    if (nativeShouldBeMock()) {\n      reanimatedModule = JSPropUpdater._reanimatedModuleMock;\n    } else {\n      reanimatedModule = NativeModules.ReanimatedModule;\n    }\n    this._reanimatedEventEmitter = new NativeEventEmitter(reanimatedModule);\n  }\n\n  public addOnJSPropsChangeListener(\n    animatedComponent: React.Component<unknown, unknown>\n  ) {\n    const viewTag = findNodeHandle(animatedComponent);\n    JSPropUpdater._tagToComponentMapping.set(viewTag, animatedComponent);\n    if (JSPropUpdater._tagToComponentMapping.size === 1) {\n      this._reanimatedEventEmitter.addListener(\n        'onReanimatedPropsChange',\n        JSPropUpdater._listener\n      );\n    }\n  }\n\n  public removeOnJSPropsChangeListener(\n    animatedComponent: React.Component<unknown, unknown>\n  ) {\n    const viewTag = findNodeHandle(animatedComponent);\n    JSPropUpdater._tagToComponentMapping.delete(viewTag);\n    if (JSPropUpdater._tagToComponentMapping.size === 0) {\n      this._reanimatedEventEmitter.removeAllListeners(\n        'onReanimatedPropsChange'\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}