{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Profile(_ref) {\n  var onClose = _ref.onClose;\n  var userName = \"John Doe\";\n  var userContactNumber = \"+1234567890\";\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.box,\n      children: [_jsx(Image, {\n        source: require(\"./user-icon.png\"),\n        style: styles.icon\n      }), _jsxs(View, {\n        style: styles.info,\n        children: [_jsx(Text, {\n          style: styles.name,\n          children: userName\n        }), _jsx(Text, {\n          style: styles.contactNumber,\n          children: userContactNumber\n        })]\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: styles.closeButton,\n      onPress: onClose,\n      children: _jsx(Text, {\n        style: styles.closeButtonText,\n        children: \"Close\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    padding: 20\n  },\n  box: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#f7f7f7',\n    padding: 10,\n    borderRadius: 5\n  },\n  icon: {\n    width: 50,\n    height: 50,\n    borderRadius: 25\n  },\n  info: {\n    marginLeft: 10\n  },\n  name: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  contactNumber: {\n    fontSize: 16\n  },\n  closeButton: {\n    marginTop: 20,\n    alignSelf: 'center',\n    padding: 10,\n    backgroundColor: 'blue',\n    borderRadius: 5\n  },\n  closeButtonText: {\n    color: 'white',\n    fontSize: 16\n  }\n});","map":{"version":3,"names":["React","View","Text","StyleSheet","TouchableOpacity","Image","jsx","_jsx","jsxs","_jsxs","Profile","_ref","onClose","userName","userContactNumber","style","styles","container","children","box","source","require","icon","info","name","contactNumber","closeButton","onPress","closeButtonText","create","flex","backgroundColor","padding","flexDirection","alignItems","borderRadius","width","height","marginLeft","fontSize","fontWeight","marginTop","alignSelf","color"],"sources":["C:/Users/Asus/Desktop/sirFrancis-main/src/screens/ProfileIcon.js"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity, Image } from 'react-native';\r\n\r\nexport default function Profile({ onClose }) {\r\n  const userName = \"John Doe\"; // Replace this with the user's actual name\r\n  const userContactNumber = \"+1234567890\"; // Replace this with the user's actual contact number\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.box}>\r\n        <Image\r\n          source={require('./user-icon.png')}\r\n          style={styles.icon}\r\n        />\r\n        <View style={styles.info}>\r\n          <Text style={styles.name}>{userName}</Text>\r\n          <Text style={styles.contactNumber}>{userContactNumber}</Text>\r\n        </View>\r\n      </View>\r\n      {/* Add your profile content here */}\r\n      <TouchableOpacity style={styles.closeButton} onPress={onClose}>\r\n        <Text style={styles.closeButtonText}>Close</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: 'white',\r\n    padding: 20,\r\n  },\r\n  box: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    backgroundColor: '#f7f7f7',\r\n    padding: 10,\r\n    borderRadius: 5,\r\n  },\r\n  icon: {\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: 25,\r\n  },\r\n  info: {\r\n    marginLeft: 10,\r\n  },\r\n  name: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  contactNumber: {\r\n    fontSize: 16,\r\n  },\r\n  // Add styles for your profile content\r\n  closeButton: {\r\n    marginTop: 20,\r\n    alignSelf: 'center',\r\n    padding: 10,\r\n    backgroundColor: 'blue',\r\n    borderRadius: 5,\r\n  },\r\n  closeButtonText: {\r\n    color: 'white',\r\n    fontSize: 16,\r\n  },\r\n});"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,KAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAG1B,eAAe,SAASC,OAAOA,CAAAC,IAAA,EAAc;EAAA,IAAXC,OAAO,GAAAD,IAAA,CAAPC,OAAO;EACvC,IAAMC,QAAQ,GAAG,UAAU;EAC3B,IAAMC,iBAAiB,GAAG,aAAa;EAEvC,OACEL,KAAA,CAACR,IAAI;IAACc,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BT,KAAA,CAACR,IAAI;MAACc,KAAK,EAAEC,MAAM,CAACG,GAAI;MAAAD,QAAA,GACtBX,IAAA,CAACF,KAAK;QACJe,MAAM,EAAEC,OAAO,kBAAkB,CAAE;QACnCN,KAAK,EAAEC,MAAM,CAACM;MAAK,CACpB,CAAC,EACFb,KAAA,CAACR,IAAI;QAACc,KAAK,EAAEC,MAAM,CAACO,IAAK;QAAAL,QAAA,GACvBX,IAAA,CAACL,IAAI;UAACa,KAAK,EAAEC,MAAM,CAACQ,IAAK;UAAAN,QAAA,EAAEL;QAAQ,CAAO,CAAC,EAC3CN,IAAA,CAACL,IAAI;UAACa,KAAK,EAAEC,MAAM,CAACS,aAAc;UAAAP,QAAA,EAAEJ;QAAiB,CAAO,CAAC;MAAA,CACzD,CAAC;IAAA,CACH,CAAC,EAEPP,IAAA,CAACH,gBAAgB;MAACW,KAAK,EAAEC,MAAM,CAACU,WAAY;MAACC,OAAO,EAAEf,OAAQ;MAAAM,QAAA,EAC5DX,IAAA,CAACL,IAAI;QAACa,KAAK,EAAEC,MAAM,CAACY,eAAgB;QAAAV,QAAA,EAAC;MAAK,CAAM;IAAC,CACjC,CAAC;EAAA,CACf,CAAC;AAEX;AAEA,IAAMF,MAAM,GAAGb,UAAU,CAAC0B,MAAM,CAAC;EAC/BZ,SAAS,EAAE;IACTa,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,OAAO;IACxBC,OAAO,EAAE;EACX,CAAC;EACDb,GAAG,EAAE;IACHc,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,QAAQ;IACpBH,eAAe,EAAE,SAAS;IAC1BC,OAAO,EAAE,EAAE;IACXG,YAAY,EAAE;EAChB,CAAC;EACDb,IAAI,EAAE;IACJc,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVF,YAAY,EAAE;EAChB,CAAC;EACDZ,IAAI,EAAE;IACJe,UAAU,EAAE;EACd,CAAC;EACDd,IAAI,EAAE;IACJe,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC;EACDf,aAAa,EAAE;IACbc,QAAQ,EAAE;EACZ,CAAC;EAEDb,WAAW,EAAE;IACXe,SAAS,EAAE,EAAE;IACbC,SAAS,EAAE,QAAQ;IACnBV,OAAO,EAAE,EAAE;IACXD,eAAe,EAAE,MAAM;IACvBI,YAAY,EAAE;EAChB,CAAC;EACDP,eAAe,EAAE;IACfe,KAAK,EAAE,OAAO;IACdJ,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}