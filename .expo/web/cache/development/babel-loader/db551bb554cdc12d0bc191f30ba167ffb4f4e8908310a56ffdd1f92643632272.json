{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { fetch } from \"expo-fetch\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function RegisterScreen() {\n  var navigation = useNavigation();\n  var _useState = useState({\n      username: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var register = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var response = yield fetch(\"http://localhost:8000/data/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: data.username,\n          password: data.password,\n          confirmPassword: data.confirmPassword\n        })\n      });\n      if (response.status === 200) {\n        Alert.alert(\"Registration successful!\");\n        navigation.navigate(\"LoginScreen\");\n      } else {\n        Alert.alert(\"Registration failed!\");\n      }\n    });\n    return function register() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.header,\n      children: \"Register\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Username\",\n      value: data.username,\n      onChangeText: function onChangeText(text) {\n        return setData(_objectSpread(_objectSpread({}, data), {}, {\n          username: text\n        }));\n      }\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Password\",\n      value: data.password,\n      onChangeText: function onChangeText(text) {\n        return setData(_objectSpread(_objectSpread({}, data), {}, {\n          password: text\n        }));\n      },\n      secureTextEntry: true\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Confirm Password\",\n      value: data.confirmPassword,\n      onChangeText: function onChangeText(text) {\n        return setData(_objectSpread(_objectSpread({}, data), {}, {\n          confirmPassword: text\n        }));\n      },\n      secureTextEntry: true\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: register,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Register\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  header: {\n    fontSize: 24,\n    fontWeight: \"bold\"\n  },\n  input: {\n    width: 300,\n    margin: 10,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: \"gray\",\n    borderRadius: 5\n  },\n  button: {\n    backgroundColor: \"blue\",\n    padding: 10,\n    borderRadius: 5\n  },\n  buttonText: {\n    color: \"white\",\n    fontSize: 18\n  }\n});","map":{"version":3,"names":["React","useState","useNavigation","Text","TextInput","View","StyleSheet","TouchableOpacity","fetch","jsx","_jsx","jsxs","_jsxs","RegisterScreen","navigation","_useState","username","password","confirmPassword","_useState2","_slicedToArray","data","setData","register","_ref","_asyncToGenerator","response","method","headers","body","JSON","stringify","status","Alert","alert","navigate","apply","arguments","style","styles","container","children","header","input","placeholder","value","onChangeText","text","_objectSpread","secureTextEntry","button","onPress","buttonText","create","flex","justifyContent","alignItems","fontSize","fontWeight","width","margin","padding","borderWidth","borderColor","borderRadius","backgroundColor","color"],"sources":["C:/Users/Asus/Desktop/sirFrancis-main/src/screens/RegisterScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Text, TextInput, View, StyleSheet, TouchableOpacity } from \"react-native\";\nimport { fetch } from \"expo-fetch\";\n\nexport default function RegisterScreen() {\n  const navigation = useNavigation();\n\n  const [data, setData] = useState({\n    username: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  const register = async () => {\n    const response = await fetch(\"http://localhost:8000/data/register\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username: data.username,\n        password: data.password,\n        confirmPassword: data.confirmPassword,\n      }),\n    });\n\n    if (response.status === 200) {\n      Alert.alert(\"Registration successful!\");\n      navigation.navigate(\"LoginScreen\");\n    } else {\n      Alert.alert(\"Registration failed!\");\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.header}>Register</Text>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Username\"\n        value={data.username}\n        onChangeText={(text) => setData({ ...data, username: text })}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Password\"\n        value={data.password}\n        onChangeText={(text) => setData({ ...data, password: text })}\n        secureTextEntry\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Confirm Password\"\n        value={data.confirmPassword}\n        onChangeText={(text) => setData({ ...data, confirmPassword: text })}\n        secureTextEntry\n      />\n      <TouchableOpacity style={styles.button} onPress={register}>\n        <Text style={styles.buttonText}>Register</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  header: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n  },\n  input: {\n    width: 300,\n    margin: 10,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: \"gray\",\n    borderRadius: 5,\n  },\n  button: {\n    backgroundColor: \"blue\",\n    padding: 10,\n    borderRadius: 5,\n  },\n  buttonText: {\n    color: \"white\",\n    fontSize: 18,\n  },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}