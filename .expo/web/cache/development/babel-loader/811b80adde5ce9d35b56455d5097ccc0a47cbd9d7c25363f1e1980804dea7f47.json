{"ast":null,"code":"import React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useNavigation } from '@react-navigation/native';\nimport { useCart } from \"../../CartContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function CartIcon() {\n  var navigation = useNavigation();\n  var _useCart = useCart(),\n    cartItems = _useCart.cartItems;\n  var calculateTotalPrice = function calculateTotalPrice() {\n    return cartItems.reduce(function (total, item) {\n      return total + parseFloat(item.price.slice(1));\n    }, 0);\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('Dashboard');\n      },\n      style: styles.backButton\n    }), cartItems.length > 0 && _jsxs(View, {\n      style: styles.cartItems,\n      children: [cartItems.map(function (item, index) {\n        return _jsxs(View, {\n          style: styles.cartItem,\n          children: [_jsx(Text, {\n            style: styles.cartItemName,\n            children: item.name\n          }), _jsxs(Text, {\n            style: styles.cartItemPrice,\n            children: [\"$\", item.price]\n          })]\n        }, index);\n      }), _jsxs(Text, {\n        style: styles.cartTotal,\n        children: [\"Total: $\", calculateTotalPrice().toFixed(2)]\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  backButton: {\n    position: 'absolute',\n    backgroundColor: 'transparent'\n  },\n  cartButton: {\n    position: 'absolute',\n    right: 20,\n    top: 5,\n    backgroundColor: 'transparent'\n  },\n  cartIcon: {\n    fontSize: 24,\n    marginTop: 10\n  },\n  cartItemCount: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    backgroundColor: 'red',\n    color: 'white',\n    borderRadius: 10,\n    paddingHorizontal: 4,\n    paddingVertical: 2,\n    fontSize: 10\n  },\n  cartTotal: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginTop: 5\n  },\n  cartItems: {\n    marginTop: 10\n  },\n  cartItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 5,\n    paddingHorizontal: 10\n  },\n  cartItemName: {\n    fontSize: 14,\n    flex: 1\n  },\n  cartItemPrice: {\n    fontSize: 14,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"names":["React","TouchableOpacity","StyleSheet","Text","View","useNavigation","useCart","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CartIcon","navigation","_useCart","cartItems","calculateTotalPrice","reduce","total","item","parseFloat","price","slice","children","onPress","navigate","style","styles","backButton","length","map","index","cartItem","cartItemName","name","cartItemPrice","cartTotal","toFixed","create","position","backgroundColor","cartButton","right","top","cartIcon","fontSize","marginTop","cartItemCount","color","borderRadius","paddingHorizontal","paddingVertical","fontWeight","flexDirection","justifyContent","alignItems","marginBottom","flex"],"sources":["C:/Users/Asus/Desktop/sirFrancis-main/src/screens/CartIcon.js"],"sourcesContent":["import React from 'react';\r\nimport { TouchableOpacity, StyleSheet, Text, View } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { useCart } from '../../CartContext'; \r\n\r\nexport default function CartIcon() {\r\n  const navigation = useNavigation();\r\n  const { cartItems } = useCart(); \r\n\r\n  const calculateTotalPrice = () => {\r\n    return cartItems.reduce((total, item) => total + parseFloat(item.price.slice(1)), 0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TouchableOpacity\r\n        onPress={() => navigation.navigate('Dashboard')} \r\n        style={styles.backButton}\r\n      >\r\n        {/* Add your back icon here */}\r\n      </TouchableOpacity>\r\n\r\n      {cartItems.length > 0 && (\r\n        <View style={styles.cartItems}>\r\n          {cartItems.map((item, index) => (\r\n            <View key={index} style={styles.cartItem}>\r\n              <Text style={styles.cartItemName}>{item.name}</Text>\r\n              <Text style={styles.cartItemPrice}>${item.price}</Text>\r\n            </View>\r\n          ))}\r\n          <Text style={styles.cartTotal}>Total: ${calculateTotalPrice().toFixed(2)}</Text>\r\n        </View>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  backButton: {\r\n    position: 'absolute',\r\n    backgroundColor: 'transparent',\r\n  },\r\n  cartButton: {\r\n    position: 'absolute',\r\n    right: 20,\r\n    top: 5,\r\n    backgroundColor: 'transparent',\r\n  },\r\n  cartIcon: {\r\n    fontSize: 24,\r\n    marginTop: 10,\r\n  },\r\n  cartItemCount: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    right: 0,\r\n    backgroundColor: 'red',\r\n    color: 'white',\r\n    borderRadius: 10,\r\n    paddingHorizontal: 4, \r\n    paddingVertical: 2,\r\n    fontSize: 10,\r\n  },\r\n  cartTotal: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    marginTop: 5,\r\n  },\r\n  cartItems: {\r\n    marginTop: 10,\r\n  },\r\n  cartItem: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 5,\r\n    paddingHorizontal: 10,\r\n  },\r\n  cartItemName: {\r\n    fontSize: 14,\r\n    flex: 1,\r\n  },\r\n  cartItemPrice: {\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}