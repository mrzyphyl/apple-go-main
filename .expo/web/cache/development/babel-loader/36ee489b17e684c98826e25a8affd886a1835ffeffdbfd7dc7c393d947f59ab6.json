{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"tintColor\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport { PlatformPressable } from '@react-navigation/elements';\nimport { DrawerActions, useNavigation } from '@react-navigation/native';\nimport * as React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nexport default function DrawerToggleButton(_ref) {\n  var tintColor = _ref.tintColor,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var navigation = useNavigation();\n  return React.createElement(PlatformPressable, _extends({}, rest, {\n    accessible: true,\n    accessibilityRole: \"button\",\n    android_ripple: {\n      borderless: true\n    },\n    onPress: function onPress() {\n      return navigation.dispatch(DrawerActions.toggleDrawer());\n    },\n    style: styles.touchable,\n    hitSlop: Platform.select({\n      ios: undefined,\n      default: {\n        top: 16,\n        right: 16,\n        bottom: 16,\n        left: 16\n      }\n    })\n  }), React.createElement(Image, {\n    style: [styles.icon, tintColor ? {\n      tintColor: tintColor\n    } : null],\n    source: require(\"./assets/toggle-drawer-icon.png\"),\n    fadeDuration: 0\n  }));\n}\nvar styles = StyleSheet.create({\n  icon: {\n    height: 24,\n    width: 24,\n    margin: 3,\n    resizeMode: 'contain'\n  },\n  touchable: {\n    marginHorizontal: 11\n  }\n});","map":{"version":3,"sources":["C:\\Users\\Asus\\Desktop\\sirFrancis-main\\node_modules\\@react-navigation\\drawer\\src\\views\\DrawerToggleButton.tsx"],"names":["PlatformPressable","DrawerActions","useNavigation","React","DrawerToggleButton","tintColor","rest","navigation","borderless","dispatch","toggleDrawer","styles","touchable","Platform","select","ios","undefined","default","top","right","bottom","left","icon","require","StyleSheet","create","height","width","margin","resizeMode","marginHorizontal"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,iBAAiB,QAAQ,4BAA4B;AAC9D,SACEC,aAAa,EAEbC,aAAa,QACR,0BAA0B;AACjC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAA,OAAA,KAAA;AAAA,OAAA,QAAA;AAAA,OAAA,UAAA;AAY9B,eAAe,SAASC,kBAAkB,CAAA,IAAA,EAAgC;EAA/B,IAAEC,SAAS,GAAkB,IAAA,CAA3BA,SAAS;IAAKC,IAAAA,GAAAA,wBAAAA,CAAa,IAAA,EAAA,SAAA;EACtE,IAAMC,UAAU,GAAGL,aAAa,CAAA,CAAuC;EAEvE,OACE,KAAA,CAAA,aAAA,CAAC,iBAAiB,EAAA,QAAA,CAAA,CAAA,CAAA,EACZI,IAAI,EAAA;IACR,UAAU,EAAA,IAAA;IACV,iBAAiB,EAAC,QAAQ;IAC1B,cAAc,EAAE;MAAEE,UAAU,EAAE;IAAK,CAAE;IACrC,OAAO,EAAE,SAAA,QAAA;MAAA,OAAMD,UAAU,CAACE,QAAQ,CAACR,aAAa,CAACS,YAAY,CAAA,CAAE,CAAE;IAAA;IACjE,KAAK,EAAEC,MAAM,CAACC,SAAU;IACxB,OAAO,EAAEC,QAAQ,CAACC,MAAM,CAAC;MACvBC,GAAG,EAAEC,SAAS;MACdC,OAAO,EAAE;QAAEC,GAAG,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,IAAI,EAAE;MAAG;IACtD,CAAC;EAAE,CAAA,CAAA,EAEH,KAAA,CAAA,aAAA,CAAC,KAAK,EAAA;IACJ,KAAK,EAAE,CAACV,MAAM,CAACW,IAAI,EAAEjB,SAAS,GAAG;MAAEA,SAAAA,EAAAA;IAAU,CAAC,GAAG,IAAI,CAAE;IACvD,MAAM,EAAEkB,OAAO,kCAAkC,CAAE;IACnD,YAAY,EAAE;EAAE,CAAA,CAChB,CACgB;AAExB;AAEA,IAAMZ,MAAM,GAAGa,UAAU,CAACC,MAAM,CAAC;EAC/BH,IAAI,EAAE;IACJI,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,CAAC;IACTC,UAAU,EAAE;EACd,CAAC;EACDjB,SAAS,EAAE;IACTkB,gBAAgB,EAAE;EACpB;AACF,CAAC,CAAC","sourcesContent":["import { PlatformPressable } from '@react-navigation/elements';\nimport {\n  DrawerActions,\n  ParamListBase,\n  useNavigation,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { Image, Platform, StyleSheet } from 'react-native';\n\nimport type { DrawerNavigationProp } from '../types';\n\ntype Props = {\n  accessibilityLabel?: string;\n  pressColor?: string;\n  pressOpacity?: number;\n  tintColor?: string;\n};\n\nexport default function DrawerToggleButton({ tintColor, ...rest }: Props) {\n  const navigation = useNavigation<DrawerNavigationProp<ParamListBase>>();\n\n  return (\n    <PlatformPressable\n      {...rest}\n      accessible\n      accessibilityRole=\"button\"\n      android_ripple={{ borderless: true }}\n      onPress={() => navigation.dispatch(DrawerActions.toggleDrawer())}\n      style={styles.touchable}\n      hitSlop={Platform.select({\n        ios: undefined,\n        default: { top: 16, right: 16, bottom: 16, left: 16 },\n      })}\n    >\n      <Image\n        style={[styles.icon, tintColor ? { tintColor } : null]}\n        source={require('./assets/toggle-drawer-icon.png')}\n        fadeDuration={0}\n      />\n    </PlatformPressable>\n  );\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    height: 24,\n    width: 24,\n    margin: 3,\n    resizeMode: 'contain',\n  },\n  touchable: {\n    marginHorizontal: 11,\n  },\n});\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}