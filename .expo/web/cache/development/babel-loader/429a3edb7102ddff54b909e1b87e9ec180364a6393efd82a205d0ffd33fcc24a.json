{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nvar CartContext = createContext();\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function CartProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    cartItems = _useState2[0],\n    setCartItems = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    parsedUser = _useState4[0],\n    setParsedUser = _useState4[1];\n  useEffect(_asyncToGenerator(function* () {\n    try {\n      var userData = yield AsyncStorage.getItem('userData');\n      if (userData !== null) {\n        var parsedUserData = JSON.parse(userData);\n        setParsedUser(parsedUserData);\n        return parsedUserData;\n      } else {\n        return null;\n      }\n    } catch (error) {\n      console.error(\"Error retrieving data from local storage:\", error);\n      return null;\n    }\n  }));\n  var addToCart = function addToCart(item) {\n    setCartItems([].concat(_toConsumableArray(cartItems), [item]));\n    axios.post('http://localhost:8000/cart/addcart', {\n      username: parsedUser.username,\n      cartItemName: item.cartItemName,\n      cartItemPrice: item.cartItemPrice\n    }).then(function (result) {\n      console.log(result);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n  useEffect(function () {\n    axios.get(\"http://localhost:8000/cart/getCartData\").then(function (result) {\n      console.log(result.data);\n      console.log(result);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }, []);\n  var removeFromCart = function removeFromCart(item) {\n    var indexOfItemToRemove = cartItems.findIndex(function (cartItem) {\n      return cartItem.name === item.name;\n    });\n    if (indexOfItemToRemove !== -1) {\n      var updatedCart = _toConsumableArray(cartItems);\n      updatedCart.splice(indexOfItemToRemove, 1);\n      setCartItems(updatedCart);\n    }\n  };\n  var clearCart = function clearCart() {\n    setCartItems([]);\n  };\n  return _jsx(CartContext.Provider, {\n    value: {\n      cartItems: cartItems,\n      addToCart: addToCart,\n      removeFromCart: removeFromCart,\n      clearCart: clearCart\n    },\n    children: children\n  });\n}\nexport function useCart() {\n  return useContext(CartContext);\n}","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","AsyncStorage","CartContext","axios","jsx","_jsx","CartProvider","_ref","children","_useState","_useState2","_slicedToArray","cartItems","setCartItems","_useState3","_useState4","parsedUser","setParsedUser","_asyncToGenerator","userData","getItem","parsedUserData","JSON","parse","error","console","addToCart","item","concat","_toConsumableArray","post","username","cartItemName","cartItemPrice","then","result","log","catch","err","get","data","removeFromCart","indexOfItemToRemove","findIndex","cartItem","name","updatedCart","splice","clearCart","Provider","value","useCart"],"sources":["D:/Projects/apple-go-main/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nconst CartContext = createContext();\nimport axios from 'axios'; // Import Axios\n\nexport function CartProvider({ children }) { \n  const [cartItems, setCartItems] = useState([]);\n\n  const [parsedUser, setParsedUser] = useState([])\n\n  useEffect(async () => {\n    try {\n      const userData = await AsyncStorage.getItem('userData');\n      if (userData !== null) {\n        // Data was found in local storage, parse it as JSON\n        const parsedUserData = JSON.parse(userData)\n        setParsedUser(parsedUserData)\n        return parsedUserData;\n      } else {\n        // Data was not found in local storage\n        return null;\n      }\n    } catch (error) {\n      // Error retrieving data\n      console.error(\"Error retrieving data from local storage:\", error);\n      return null;\n    }\n  }) \n\n  const addToCart = (item) => {\n    setCartItems([...cartItems, item])\n    axios.post('http://localhost:8000/cart/addcart', {\n      username: parsedUser.username,\n      cartItemName: item.cartItemName,\n      cartItemPrice: item.cartItemPrice\n    })\n    .then(result => {\n      console.log(result)\n    })\n    .catch(err => console.log(err))\n  }\n  \n  useEffect(() => {\n    axios.get(\"http://localhost:8000/cart/getCartData\")\n    .then(result => {\n      console.log(result.data)\n      console.log(result)\n    })\n    .catch(err => console.log(err))\n  }, [])\n  \n\n  const removeFromCart = (item) => {\n    const indexOfItemToRemove = cartItems.findIndex((cartItem) => cartItem.name === item.name);\n    if (indexOfItemToRemove !== -1) {\n      const updatedCart = [...cartItems];\n      updatedCart.splice(indexOfItemToRemove, 1);\n      setCartItems(updatedCart);\n    }\n  };\n\n  const clearCart = () => {\n    setCartItems([]);\n  };\n\n  return (\n    <CartContext.Provider value={{ cartItems, addToCart, removeFromCart, clearCart }}>\n      {children}\n    </CartContext.Provider>\n  );\n}\n\nexport function useCart() {\n  return useContext(CartContext);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}