{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { PanGestureHandler, State } from 'react-native-gesture-handler';\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport McDonaldsMenu from \"../components/fastfood/McDonaldsMenu\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Dashboard(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(new Animated.Value(1)),\n    _useState2 = _slicedToArray(_useState, 1),\n    scaleValue = _useState2[0];\n  var handlePress = function handlePress() {\n    Animated.sequence([Animated.timing(scaleValue, {\n      toValue: 0.9,\n      duration: 100,\n      useNativeDriver: true\n    }), Animated.timing(scaleValue, {\n      toValue: 1,\n      duration: 100,\n      useNativeDriver: true\n    })]).start(function () {\n      navigation.navigate('McDonaldsMenu');\n    });\n  };\n  var handleSwipeRight = function handleSwipeRight() {};\n  return _jsxs(Background, {\n    children: [_jsx(Logo, {}), _jsx(View, {\n      style: styles.headerContainer,\n      children: _jsx(Header, {\n        style: styles.welcomeText,\n        children: \"Welcome to APPLEGO Express\"\n      })\n    }), _jsx(TouchableWithoutFeedback, {\n      onPress: handlePress,\n      children: _jsxs(Animated.View, {\n        style: [styles.brandButton, {\n          transform: [{\n            scale: scaleValue\n          }]\n        }],\n        children: [_jsxs(View, {\n          children: [_jsx(Text, {\n            style: styles.brandButtonText,\n            children: \"McDonald's\"\n          }), _jsx(Text, {\n            style: styles.salesQuote,\n            children: \"\\\"I'm lovin' it!\\\" - McDonald's\"\n          })]\n        }), _jsx(Icon, {\n          name: \"arrow-right\",\n          size: 30,\n          color: \"#007BFF\"\n        })]\n      })\n    }), _jsx(PanGestureHandler, {\n      onGestureEvent: handleSwipeRight,\n      children: _jsx(Animated.View, {\n        style: styles.swipeableBox,\n        children: _jsx(Text, {\n          style: styles.boxText,\n          children: \"Swipe me right!\"\n        })\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.cartButton,\n      children: _jsx(Icon, {\n        name: \"shopping-cart\",\n        size: 30,\n        color: \"#fff\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  headerContainer: {\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  welcomeText: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginBottom: 20\n  },\n  brandButton: {\n    backgroundColor: 'rgba(255, 255, 255, 0.5)',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: 10,\n    borderRadius: 8,\n    marginBottom: 20\n  },\n  brandButtonText: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#007BFF'\n  },\n  salesQuote: {\n    fontSize: 18,\n    fontStyle: 'italic',\n    textAlign: 'center'\n  },\n  cartButton: {\n    backgroundColor: 'blue',\n    opacity: 0.6,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: 60,\n    height: 60,\n    borderRadius: 30,\n    position: 'absolute',\n    bottom: 20,\n    right: 20\n  },\n  swipeableBox: {\n    backgroundColor: 'rgba(255, 0, 0, 0.5)',\n    height: 100,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 8,\n    marginVertical: 10\n  },\n  boxText: {\n    fontSize: 18,\n    color: '#fff'\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","TouchableOpacity","Animated","TouchableWithoutFeedback","PanGestureHandler","State","Background","Logo","Header","Icon","McDonaldsMenu","jsx","_jsx","jsxs","_jsxs","Dashboard","_ref","navigation","_useState","Value","_useState2","_slicedToArray","scaleValue","handlePress","sequence","timing","toValue","duration","useNativeDriver","start","navigate","handleSwipeRight","children","style","styles","headerContainer","welcomeText","onPress","brandButton","transform","scale","brandButtonText","salesQuote","name","size","color","onGestureEvent","swipeableBox","boxText","cartButton","create","alignItems","marginBottom","fontSize","fontWeight","textAlign","backgroundColor","flexDirection","justifyContent","padding","borderRadius","fontStyle","opacity","width","height","position","bottom","right","marginVertical"],"sources":["C:/Users/Asus/Desktop/sirFrancis-main/src/screens/Dashboard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Animated, TouchableWithoutFeedback } from 'react-native';\nimport { PanGestureHandler, State } from 'react-native-gesture-handler'; // Import PanGestureHandler\nimport Background from '../components/Background';\nimport Logo from '../components/Logo';\nimport Header from '../components/Header';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport McDonaldsMenu from '../components/fastfood/McDonaldsMenu';\n\nexport default function Dashboard({ navigation }) {\n  const [scaleValue] = useState(new Animated.Value(1));\n\n  const handlePress = () => {\n    Animated.sequence([\n      Animated.timing(scaleValue, { toValue: 0.9, duration: 100, useNativeDriver: true }),\n      Animated.timing(scaleValue, { toValue: 1, duration: 100, useNativeDriver: true }),\n    ]).start(() => {\n      navigation.navigate('McDonaldsMenu');\n    });\n  };\n\n  // Handle swipe action\n  const handleSwipeRight = () => {\n    // Add your logic here for what should happen when the box is swiped right.\n    // You can navigate to another screen or perform any other action.\n  };\n\n  return (\n    <Background>\n      <Logo />\n      <View style={styles.headerContainer}>\n        <Header style={styles.welcomeText}>Welcome to APPLEGO Express</Header>\n      </View>\n\n      {/* McDonald's Section with Sales Quote */}\n      <TouchableWithoutFeedback onPress={handlePress}>\n        <Animated.View style={[styles.brandButton, { transform: [{ scale: scaleValue }] }]}>\n          <View>\n            <Text style={styles.brandButtonText}>McDonald's</Text>\n            <Text style={styles.salesQuote}>\n              \"I'm lovin' it!\" - McDonald's\n            </Text>\n          </View>\n          <Icon name=\"arrow-right\" size={30} color=\"#007BFF\" />\n        </Animated.View>\n      </TouchableWithoutFeedback>\n\n      {/* Swipeable Box */}\n      <PanGestureHandler onGestureEvent={handleSwipeRight}>\n        <Animated.View style={styles.swipeableBox}>\n          <Text style={styles.boxText}>Swipe me right!</Text>\n        </Animated.View>\n      </PanGestureHandler>\n\n      {/* Repeating McDonald's sections as needed */}\n      \n      <TouchableOpacity style={styles.cartButton}>\n        <Icon name=\"shopping-cart\" size={30} color=\"#fff\" />\n      </TouchableOpacity>\n\n    </Background>\n  );\n}\n\nconst styles = StyleSheet.create({\n  headerContainer: {\n    alignItems: 'center',\n    marginBottom: 20,\n  },\n  welcomeText: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginBottom: 20,\n  },\n  brandButton: {\n    backgroundColor: 'rgba(255, 255, 255, 0.5)', // White with 50% transparency\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: 10,\n    borderRadius: 8,\n    marginBottom: 20,\n  },\n  brandButtonText: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#007BFF', // Presentable blue color\n  },\n  salesQuote: {\n    fontSize: 18,\n    fontStyle: 'italic',\n    textAlign: 'center',\n  },\n  cartButton: {\n    backgroundColor: 'blue',\n    opacity: 0.6,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: 60,\n    height: 60,\n    borderRadius: 30,\n    position: 'absolute',\n    bottom: 20,\n    right: 20,\n  },\n  swipeableBox: {\n    backgroundColor: 'rgba(255, 0, 0, 0.5)', // Example background color (red with 50% transparency)\n    height: 100,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 8,\n    marginVertical: 10, \n  },\n  boxText: {\n    fontSize: 18,\n    color: '#fff',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}