{"ast":null,"code":"import React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useNavigation } from '@react-navigation/native';\nimport { useCart } from \"../../CartContext\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function CartIcon() {\n  var navigation = useNavigation();\n  var calculateTotalPrice = function calculateTotalPrice() {\n    return cartItems.reduce(function (total, item) {\n      return total + parseFloat(item.price.slice(1));\n    }, 0);\n  };\n  return _jsx(_Fragment, {\n    children: _jsxs(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('Dashboard');\n      },\n      style: styles.cartButton,\n      children: [_jsxs(Text, {\n        style: styles.cartIcon,\n        children: [\"\\uD83D\\uDED2\", cartItems.length > 0 && _jsx(Text, {\n          style: styles.cartItemCount,\n          children: cartItems.length\n        })]\n      }), _jsxs(Text, {\n        style: styles.cartTotal,\n        children: [\"Total: $\", calculateTotalPrice().toFixed(2)]\n      }), cartItems.length > 0 && _jsx(View, {\n        style: styles.cartItems,\n        children: cartItems.map(function (item, index) {\n          return _jsxs(View, {\n            style: styles.cartItem,\n            children: [_jsx(Text, {\n              style: styles.cartItemName,\n              children: item.name\n            }), _jsx(Text, {\n              style: styles.cartItemPrice,\n              children: item.price\n            })]\n          }, index);\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  backButton: {\n    position: 'absolute',\n    top: 20,\n    left: 20,\n    backgroundColor: 'transparent'\n  },\n  cartButton: {\n    position: 'absolute',\n    right: 20,\n    top: 5,\n    backgroundColor: 'transparent'\n  },\n  cartIcon: {\n    fontSize: 24,\n    marginTop: 10\n  },\n  cartTotal: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginTop: 5\n  },\n  cartItems: {\n    marginTop: 10\n  },\n  cartItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 5\n  },\n  cartItemName: {\n    fontSize: 14\n  },\n  cartItemPrice: {\n    fontSize: 14,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"names":["React","TouchableOpacity","StyleSheet","Text","View","useNavigation","useCart","Icon","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CartIcon","navigation","calculateTotalPrice","cartItems","reduce","total","item","parseFloat","price","slice","children","onPress","navigate","style","styles","cartButton","cartIcon","length","cartItemCount","cartTotal","toFixed","map","index","cartItem","cartItemName","name","cartItemPrice","create","backButton","position","top","left","backgroundColor","right","fontSize","marginTop","fontWeight","flexDirection","justifyContent","alignItems","marginBottom"],"sources":["C:/Users/Asus/Desktop/sirFrancis-main/src/screens/CartIcon.js"],"sourcesContent":["import React from 'react';\r\nimport { TouchableOpacity, StyleSheet, Text, View } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { useCart } from '../../CartContext'; \r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n\r\nexport default function CartIcon() {\r\n  const navigation = useNavigation();\r\n\r\n\r\n  const calculateTotalPrice = () => {\r\n    return cartItems.reduce((total, item) => total + parseFloat(item.price.slice(1)), 0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      \r\n      <TouchableOpacity\r\n        onPress={() => navigation.navigate('Dashboard')} \r\n        style={styles.cartButton}\r\n      >\r\n        <Text style={styles.cartIcon}>\r\n          ðŸ›’\r\n          {cartItems.length > 0 && (\r\n            <Text style={styles.cartItemCount}>{cartItems.length}</Text>\r\n          )}\r\n        </Text>\r\n        <Text style={styles.cartTotal}>Total: ${calculateTotalPrice().toFixed(2)}</Text>\r\n        \r\n        {/* Display items in the cart */}\r\n        {cartItems.length > 0 && (\r\n          <View style={styles.cartItems}>\r\n            {cartItems.map((item, index) => (\r\n              <View key={index} style={styles.cartItem}>\r\n                <Text style={styles.cartItemName}>{item.name}</Text>\r\n                <Text style={styles.cartItemPrice}>{item.price}</Text>\r\n              </View>\r\n            ))}\r\n          </View>\r\n        )}\r\n      </TouchableOpacity>\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  backButton: {\r\n    position: 'absolute',\r\n    top: 20,\r\n    left: 20,\r\n    backgroundColor: 'transparent',\r\n  },\r\n  cartButton: {\r\n    position: 'absolute',\r\n    right: 20,\r\n    top: 5,\r\n    backgroundColor: 'transparent',\r\n  },\r\n  cartIcon: {\r\n    fontSize: 24,\r\n    marginTop: 10,\r\n  },\r\n \r\n  cartTotal: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    marginTop: 5,\r\n  },\r\n  cartItems: {\r\n    marginTop: 10,\r\n  },\r\n  cartItem: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 5,\r\n  },\r\n  cartItemName: {\r\n    fontSize: 14,\r\n  },\r\n  cartItemPrice: {\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}