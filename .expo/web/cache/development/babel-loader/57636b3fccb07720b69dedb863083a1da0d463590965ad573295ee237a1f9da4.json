{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useNavigation } from '@react-navigation/native';\nimport { useCart } from \"../../CartContext\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function CartIcon() {\n  var navigation = useNavigation();\n  var _useCart = useCart(),\n    cartItems = _useCart.cartItems,\n    removeFromCart = _useCart.removeFromCart;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isModalVisible = _useState2[0],\n    setIsModalVisible = _useState2[1];\n  var calculateTotalPrice = function calculateTotalPrice() {\n    return cartItems.reduce(function (total, item) {\n      return total + parseFloat(item.price.slice(1));\n    }, 0);\n  };\n  var handleBuy = function handleBuy() {\n    if (cartItems.length > 0) {\n      setIsModalVisible(true);\n    } else {\n      Alert.alert('Empty Cart', 'Your cart is empty. Please add items to your cart before purchasing.');\n    }\n  };\n  var closeModal = function closeModal() {\n    setIsModalVisible(false);\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('Dashboard');\n      },\n      style: styles.backButton,\n      children: _jsx(Icon, {\n        name: \"arrow-left\",\n        size: 24,\n        color: \"black\"\n      })\n    }), _jsx(Modal, {\n      visible: isModalVisible,\n      animationType: \"slide\",\n      children: _jsxs(View, {\n        style: styles.modal,\n        children: [_jsx(Text, {\n          style: styles.modalTitle,\n          children: \"Purchase Summary\"\n        }), _jsxs(ScrollView, {\n          style: styles.cartItemsContainer,\n          children: [cartItems.map(function (item, index) {\n            return _jsxs(View, {\n              style: styles.cartItem,\n              children: [_jsx(Text, {\n                style: styles.cartItemName,\n                children: item.name\n              }), _jsx(Text, {\n                style: styles.cartItemPrice,\n                children: item.price\n              })]\n            }, index);\n          }), _jsxs(Text, {\n            style: styles.cartTotal,\n            children: [\"Total: $\", calculateTotalPrice().toFixed(2)]\n          }), _jsx(Button, {\n            title: \"Close\",\n            onPress: closeModal\n          })]\n        })]\n      })\n    }), cartItems.length > 0 ? _jsxs(ScrollView, {\n      style: styles.cartItemsContainer,\n      children: [_jsxs(View, {\n        style: styles.cartTitle,\n        children: [_jsx(Text, {\n          style: styles.cartTitleText,\n          children: \"CART\"\n        }), _jsx(View, {\n          style: styles.cartTitleLine\n        })]\n      }), cartItems.map(function (item, index) {\n        return _jsxs(View, {\n          style: styles.cartItem,\n          children: [_jsx(Text, {\n            style: styles.cartItemName,\n            children: item.name\n          }), _jsx(Text, {\n            style: styles.cartItemPrice,\n            children: item.price\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return removeFromCart(item);\n            },\n            style: styles.removeButton,\n            children: _jsx(Text, {\n              style: styles.removeButtonText,\n              children: \"Remove\"\n            })\n          })]\n        }, index);\n      }), _jsxs(Text, {\n        style: styles.cartTotal,\n        children: [\"-----------------------Total: $\", calculateTotalPrice().toFixed(2)]\n      }), _jsx(TouchableOpacity, {\n        onPress: handleBuy,\n        style: styles.buyButton,\n        children: _jsx(Text, {\n          style: styles.buyButtonText,\n          children: \"Buy\"\n        })\n      })]\n    }) : _jsx(Text, {\n      style: styles.emptyCartText,\n      children: \"Your cart is empty.\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  modal: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'white'\n  },\n  modalTitle: {\n    fontSize: 24,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"names":["React","useState","TouchableOpacity","StyleSheet","Text","View","ScrollView","Modal","Button","Alert","useNavigation","useCart","Icon","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CartIcon","navigation","_useCart","cartItems","removeFromCart","_useState","_useState2","_slicedToArray","isModalVisible","setIsModalVisible","calculateTotalPrice","reduce","total","item","parseFloat","price","slice","handleBuy","length","alert","closeModal","children","onPress","navigate","style","styles","backButton","name","size","color","visible","animationType","modal","modalTitle","cartItemsContainer","map","index","cartItem","cartItemName","cartItemPrice","cartTotal","toFixed","title","cartTitle","cartTitleText","cartTitleLine","removeButton","removeButtonText","buyButton","buyButtonText","emptyCartText","create","flex","justifyContent","alignItems","backgroundColor","fontSize","fontWeight"],"sources":["C:/Users/Asus/Desktop/sirFrancis-main/src/screens/CartIcon.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { TouchableOpacity, StyleSheet, Text, View, ScrollView, Modal, Button, Alert } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { useCart } from '../../CartContext';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n\r\nexport default function CartIcon() {\r\n  const navigation = useNavigation();\r\n  const { cartItems, removeFromCart } = useCart();\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const calculateTotalPrice = () => {\r\n    return cartItems.reduce((total, item) => total + parseFloat(item.price.slice(1)), 0);\r\n  };\r\n\r\n  const handleBuy = () => {\r\n    if (cartItems.length > 0) {\r\n      setIsModalVisible(true);\r\n    } else {\r\n      // Cart is empty, show an alert\r\n      Alert.alert('Empty Cart', 'Your cart is empty. Please add items to your cart before purchasing.');\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TouchableOpacity\r\n        onPress={() => navigation.navigate('Dashboard')}\r\n        style={styles.backButton}\r\n      >\r\n        <Icon name=\"arrow-left\" size={24} color=\"black\" />\r\n      </TouchableOpacity>\r\n\r\n      <Modal visible={isModalVisible} animationType=\"slide\">\r\n        <View style={styles.modal}>\r\n          <Text style={styles.modalTitle}>Purchase Summary</Text>\r\n          <ScrollView style={styles.cartItemsContainer}>\r\n            {cartItems.map((item, index) => (\r\n              <View key={index} style={styles.cartItem}>\r\n                <Text style={styles.cartItemName}>{item.name}</Text>\r\n                <Text style={styles.cartItemPrice}>{item.price}</Text>\r\n              </View>\r\n            ))}\r\n            <Text style={styles.cartTotal}>Total: ${calculateTotalPrice().toFixed(2)}</Text>\r\n            <Button title=\"Close\" onPress={closeModal} />\r\n          </ScrollView>\r\n        </View>\r\n      </Modal>\r\n\r\n      {cartItems.length > 0 ? (\r\n        <ScrollView style={styles.cartItemsContainer}>\r\n          <View style={styles.cartTitle}>\r\n            <Text style={styles.cartTitleText}>CART</Text>\r\n            <View style={styles.cartTitleLine}></View>\r\n          </View>\r\n          {cartItems.map((item, index) => (\r\n            <View key={index} style={styles.cartItem}>\r\n              <Text style={styles.cartItemName}>{item.name}</Text>\r\n              <Text style={styles.cartItemPrice}>{item.price}</Text>\r\n              <TouchableOpacity onPress={() => removeFromCart(item)} style={styles.removeButton}>\r\n                <Text style={styles.removeButtonText}>Remove</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          ))}\r\n          <Text style={styles.cartTotal}>-----------------------Total: ${calculateTotalPrice().toFixed(2)}</Text>\r\n          <TouchableOpacity onPress={handleBuy} style={styles.buyButton}>\r\n            <Text style={styles.buyButtonText}>Buy</Text>\r\n          </TouchableOpacity>\r\n        </ScrollView>\r\n      ) : (\r\n        <Text style={styles.emptyCartText}>Your cart is empty.</Text>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  // ... Existing styles ...\r\n\r\n  modal: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'white',\r\n  },\r\n  modalTitle: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}