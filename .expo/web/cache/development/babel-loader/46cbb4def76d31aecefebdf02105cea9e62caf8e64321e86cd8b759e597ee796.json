{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function EditableText(_ref) {\n  var scaleValue = _ref.scaleValue,\n    handlePlusButtonPress = _ref.handlePlusButtonPress,\n    editableText = _ref.editableText,\n    setEditableText = _ref.setEditableText,\n    navigation = _ref.navigation;\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return navigation.navigate('Seller');\n    },\n    children: _jsxs(Animated.View, {\n      style: [styles.brandButton, {\n        transform: [{\n          scale: scaleValue\n        }]\n      }],\n      children: [_jsxs(View, {\n        children: [_jsx(TouchableOpacity, {\n          style: styles.plusButton,\n          onPress: function onPress() {\n            return handlePlusButtonPress(editableText);\n          },\n          children: _jsx(Text, {\n            style: styles.editButtonText,\n            children: \"Save\"\n          })\n        }), _jsx(TextInput, {\n          style: styles.editableText,\n          onChangeText: function onChangeText(text) {\n            return setEditableText(text);\n          },\n          value: editableText\n        })]\n      }), _jsx(Icon, {\n        name: \"arrow-right\",\n        size: 30,\n        color: \"#007BFF\",\n        onPress: function onPress() {\n          return navigation.navigate('Seller');\n        }\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","View","Text","TextInput","StyleSheet","TouchableOpacity","Animated","TouchableWithoutFeedback","Icon","jsx","_jsx","jsxs","_jsxs","EditableText","_ref","scaleValue","handlePlusButtonPress","editableText","setEditableText","navigation","onPress","navigate","children","style","styles","brandButton","transform","scale","plusButton","editButtonText","onChangeText","text","value","name","size","color"],"sources":["C:/Users/Asus/Desktop/sirFrancis-main/src/screens/EditableText.js"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, TextInput, StyleSheet, TouchableOpacity, Animated, TouchableWithoutFeedback } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n\r\nexport default function EditableText({\r\n  scaleValue,\r\n  handlePlusButtonPress,\r\n  editableText,\r\n  setEditableText,\r\n  navigation,\r\n}) {\r\n  return (\r\n    <TouchableWithoutFeedback onPress={() => navigation.navigate('Seller')}>\r\n      <Animated.View style={[styles.brandButton, { transform: [{ scale: scaleValue }] }]}>\r\n        <View>\r\n          <TouchableOpacity style={styles.plusButton} onPress={() => handlePlusButtonPress(editableText)}>\r\n            <Text style={styles.editButtonText}>Save</Text>\r\n          </TouchableOpacity>\r\n          <TextInput\r\n            style={styles.editableText}\r\n            onChangeText={(text) => setEditableText(text)}\r\n            value={editableText}\r\n          />\r\n        </View>\r\n        <Icon name=\"arrow-right\" size={30} color=\"#007BFF\" onPress={() => navigation.navigate('Seller')} />\r\n      </Animated.View>\r\n    </TouchableWithoutFeedback>\r\n  );\r\n}\r\n\r\n// Define styles for the child component here\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,wBAAA;AAE1B,OAAOC,IAAI;AAA8C,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEzD,eAAe,SAASC,YAAYA,CAAAC,IAAA,EAMjC;EAAA,IALDC,UAAU,GAAAD,IAAA,CAAVC,UAAU;IACVC,qBAAqB,GAAAF,IAAA,CAArBE,qBAAqB;IACrBC,YAAY,GAAAH,IAAA,CAAZG,YAAY;IACZC,eAAe,GAAAJ,IAAA,CAAfI,eAAe;IACfC,UAAU,GAAAL,IAAA,CAAVK,UAAU;EAEV,OACET,IAAA,CAACH,wBAAwB;IAACa,OAAO,EAAE,SAAAA,QAAA;MAAA,OAAMD,UAAU,CAACE,QAAQ,CAAC,QAAQ,CAAC;IAAA,CAAC;IAAAC,QAAA,EACrEV,KAAA,CAACN,QAAQ,CAACL,IAAI;MAACsB,KAAK,EAAE,CAACC,MAAM,CAACC,WAAW,EAAE;QAAEC,SAAS,EAAE,CAAC;UAAEC,KAAK,EAAEZ;QAAW,CAAC;MAAE,CAAC,CAAE;MAAAO,QAAA,GACjFV,KAAA,CAACX,IAAI;QAAAqB,QAAA,GACHZ,IAAA,CAACL,gBAAgB;UAACkB,KAAK,EAAEC,MAAM,CAACI,UAAW;UAACR,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAMJ,qBAAqB,CAACC,YAAY,CAAC;UAAA,CAAC;UAAAK,QAAA,EAC7FZ,IAAA,CAACR,IAAI;YAACqB,KAAK,EAAEC,MAAM,CAACK,cAAe;YAAAP,QAAA,EAAC;UAAI,CAAM;QAAC,CAC/B,CAAC,EACnBZ,IAAA,CAACP,SAAS;UACRoB,KAAK,EAAEC,MAAM,CAACP,YAAa;UAC3Ba,YAAY,EAAE,SAAAA,aAACC,IAAI;YAAA,OAAKb,eAAe,CAACa,IAAI,CAAC;UAAA,CAAC;UAC9CC,KAAK,EAAEf;QAAa,CACrB,CAAC;MAAA,CACE,CAAC,EACPP,IAAA,CAACF,IAAI;QAACyB,IAAI,EAAC,aAAa;QAACC,IAAI,EAAE,EAAG;QAACC,KAAK,EAAC,SAAS;QAACf,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMD,UAAU,CAACE,QAAQ,CAAC,QAAQ,CAAC;QAAA;MAAC,CAAE,CAAC;IAAA,CACtF;EAAC,CACQ,CAAC;AAE/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}