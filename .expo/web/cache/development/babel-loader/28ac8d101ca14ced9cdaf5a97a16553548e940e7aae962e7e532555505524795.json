{"ast":null,"code":"import _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty2(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nimport { BaseAnimationBuilder } from \"../animationBuilder\";\nimport { withSequence, withTiming } from \"../../animation\";\nimport { FadeIn, FadeOut } from \"../defaultAnimations/Fade\";\nexport var EntryExitTransition = function (_BaseAnimationBuilder) {\n  _inherits(EntryExitTransition, _BaseAnimationBuilder);\n  var _super = _createSuper(EntryExitTransition);\n  function EntryExitTransition() {\n    var _this;\n    _classCallCheck(this, EntryExitTransition);\n    _this = _super.apply(this, arguments);\n    _defineProperty(_assertThisInitialized(_this), \"enteringV\", FadeIn);\n    _defineProperty(_assertThisInitialized(_this), \"exitingV\", FadeOut);\n    _defineProperty(_assertThisInitialized(_this), \"build\", function () {\n      var delayFunction = _this.getDelayFunction();\n      var callback = _this.callbackV;\n      var delay = _this.getDelay();\n      var enteringAnimation = _this.enteringV.build();\n      var exitingAnimation = _this.exitingV.build();\n      var exitingDuration = _this.exitingV.getDuration();\n      return function (values) {\n        'worklet';\n\n        var enteringValues = enteringAnimation(values);\n        var exitingValues = exitingAnimation(values);\n        var animations = {\n          transform: []\n        };\n        for (var _i = 0, _Object$keys = Object.keys(exitingValues.animations); _i < _Object$keys.length; _i++) {\n          var prop = _Object$keys[_i];\n          if (prop === 'transform') {\n            if (!Array.isArray(exitingValues.animations.transform)) {\n              continue;\n            }\n            exitingValues.animations.transform.forEach(function (value, index) {\n              for (var _i2 = 0, _Object$keys2 = Object.keys(value); _i2 < _Object$keys2.length; _i2++) {\n                var transformProp = _Object$keys2[_i2];\n                animations.transform.push(_defineProperty2({}, transformProp, delayFunction(delay, withSequence(value[transformProp], withTiming(exitingValues.initialValues.transform ? exitingValues.initialValues.transform[index][transformProp] : 0, {\n                  duration: 0\n                })))));\n              }\n            });\n          } else {\n            var sequence = enteringValues.animations[prop] !== undefined ? [exitingValues.animations[prop], withTiming(enteringValues.initialValues[prop], {\n              duration: 0\n            }), enteringValues.animations[prop]] : [exitingValues.animations[prop], withTiming(Object.keys(values).includes(prop) ? values[prop] : exitingValues.initialValues[prop], {\n              duration: 0\n            })];\n            animations[prop] = delayFunction(delay, withSequence.apply(void 0, sequence));\n          }\n        }\n        for (var _i3 = 0, _Object$keys3 = Object.keys(enteringValues.animations); _i3 < _Object$keys3.length; _i3++) {\n          var _prop = _Object$keys3[_i3];\n          if (_prop === 'transform') {\n            if (!Array.isArray(enteringValues.animations.transform)) {\n              continue;\n            }\n            enteringValues.animations.transform.forEach(function (value, index) {\n              for (var _i4 = 0, _Object$keys4 = Object.keys(value); _i4 < _Object$keys4.length; _i4++) {\n                var transformProp = _Object$keys4[_i4];\n                animations.transform.push(_defineProperty2({}, transformProp, delayFunction(delay + exitingDuration, withSequence(withTiming(enteringValues.initialValues.transform ? enteringValues.initialValues.transform[index][transformProp] : 0, {\n                  duration: exitingDuration\n                }), value[transformProp]))));\n              }\n            });\n          } else if (animations[_prop] !== undefined) {\n            continue;\n          } else {\n            animations[_prop] = delayFunction(delay, withSequence(withTiming(enteringValues.initialValues[_prop], {\n              duration: 0\n            }), enteringValues.animations[_prop]));\n          }\n        }\n        var mergedTransform = (Array.isArray(exitingValues.initialValues.transform) ? exitingValues.initialValues.transform : []).concat((Array.isArray(enteringValues.animations.transform) ? enteringValues.animations.transform : []).map(function (value) {\n          var objectKeys = Object.keys(value);\n          if ((objectKeys === null || objectKeys === void 0 ? void 0 : objectKeys.length) < 1) {\n            console.error(\"[Reanimated]: ${value} is not a valid Transform object\");\n            return value;\n          }\n          var transformProp = objectKeys[0];\n          var current = value[transformProp].current;\n          if (typeof current === 'string') {\n            if (current.includes('deg')) return _defineProperty2({}, transformProp, '0deg');else return _defineProperty2({}, transformProp, '0');\n          } else if (transformProp.includes('translate')) {\n            return _defineProperty2({}, transformProp, 0);\n          } else {\n            return _defineProperty2({}, transformProp, 1);\n          }\n        }));\n        return {\n          initialValues: _objectSpread(_objectSpread({}, exitingValues.initialValues), {}, {\n            originX: values.currentOriginX,\n            originY: values.currentOriginY,\n            width: values.currentWidth,\n            height: values.currentHeight,\n            transform: mergedTransform\n          }),\n          animations: _objectSpread({\n            originX: delayFunction(delay + exitingDuration, withTiming(values.targetOriginX, {\n              duration: exitingDuration\n            })),\n            originY: delayFunction(delay + exitingDuration, withTiming(values.targetOriginY, {\n              duration: exitingDuration\n            })),\n            width: delayFunction(delay + exitingDuration, withTiming(values.targetWidth, {\n              duration: exitingDuration\n            })),\n            height: delayFunction(delay + exitingDuration, withTiming(values.targetHeight, {\n              duration: exitingDuration\n            }))\n          }, animations),\n          callback: callback\n        };\n      };\n    });\n    return _this;\n  }\n  _createClass(EntryExitTransition, [{\n    key: \"entering\",\n    value: function entering(animation) {\n      this.enteringV = animation;\n      return this;\n    }\n  }, {\n    key: \"exiting\",\n    value: function exiting(animation) {\n      this.exitingV = animation;\n      return this;\n    }\n  }], [{\n    key: \"createInstance\",\n    value: function createInstance() {\n      return new EntryExitTransition();\n    }\n  }, {\n    key: \"entering\",\n    value: function entering(animation) {\n      var instance = this.createInstance();\n      return instance.entering(animation);\n    }\n  }, {\n    key: \"exiting\",\n    value: function exiting(animation) {\n      var instance = this.createInstance();\n      return instance.exiting(animation);\n    }\n  }]);\n  return EntryExitTransition;\n}(BaseAnimationBuilder);\nexport function combineTransition(exiting, entering) {\n  return EntryExitTransition.entering(entering).exiting(exiting);\n}","map":{"version":3,"sources":["C:\\Users\\Asus\\Desktop\\sirFrancis-main\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\layoutReanimation\\defaultTransitions\\EntryExitTransition.ts"],"names":["BaseAnimationBuilder","withSequence","withTiming","FadeIn","FadeOut","EntryExitTransition","constructor","_defineProperty","animation","instance","createInstance","entering","enteringV","exiting","exitingV","delayFunction","getDelayFunction","callback","callbackV","delay","getDelay","enteringAnimation","build","exitingAnimation","exitingDuration","getDuration","values","enteringValues","exitingValues","animations","transform","prop","Object","keys","Array","isArray","forEach","value","index","transformProp","push","initialValues","duration","sequence","undefined","includes","mergedTransform","concat","map","objectKeys","length","console","error","current","originX","currentOriginX","originY","currentOriginY","width","currentWidth","height","currentHeight","targetOriginX","targetOriginY","targetWidth","targetHeight","combineTransition"],"mappings":"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","sourcesContent":["import type {\n  ILayoutAnimationBuilder,\n  LayoutAnimationsValues,\n  LayoutAnimationFunction,\n  StylePropsWithArrayTransform,\n} from '../animationBuilder/commonTypes';\nimport { BaseAnimationBuilder } from '../animationBuilder';\nimport { withSequence, withTiming } from '../../animation';\nimport { FadeIn, FadeOut } from '../defaultAnimations/Fade';\nimport type { AnimationObject } from '../../commonTypes';\nimport type { TransformArrayItem } from '../../helperTypes';\n\nexport class EntryExitTransition\n  extends BaseAnimationBuilder\n  implements ILayoutAnimationBuilder\n{\n  enteringV: BaseAnimationBuilder | typeof BaseAnimationBuilder = FadeIn;\n\n  exitingV: BaseAnimationBuilder | typeof BaseAnimationBuilder = FadeOut;\n\n  static createInstance<T extends typeof BaseAnimationBuilder>(\n    this: T\n  ): InstanceType<T> {\n    return new EntryExitTransition() as InstanceType<T>;\n  }\n\n  static entering(\n    animation: BaseAnimationBuilder | typeof BaseAnimationBuilder\n  ): EntryExitTransition {\n    const instance = this.createInstance();\n    return instance.entering(animation);\n  }\n\n  entering(\n    animation: BaseAnimationBuilder | typeof BaseAnimationBuilder\n  ): EntryExitTransition {\n    this.enteringV = animation;\n    return this;\n  }\n\n  static exiting(\n    animation: BaseAnimationBuilder | typeof BaseAnimationBuilder\n  ): EntryExitTransition {\n    const instance = this.createInstance();\n    return instance.exiting(animation);\n  }\n\n  exiting(\n    animation: BaseAnimationBuilder | typeof BaseAnimationBuilder\n  ): EntryExitTransition {\n    this.exitingV = animation;\n    return this;\n  }\n\n  build = (): LayoutAnimationFunction => {\n    const delayFunction = this.getDelayFunction();\n    const callback = this.callbackV;\n    const delay = this.getDelay();\n    // @ts-ignore Calling `.build()` both static and instance methods works fine here, but `this` types are incompatible. They are not used though, so it's fine.\n    const enteringAnimation = this.enteringV.build();\n    // @ts-ignore Calling `.build()` both static and instance methods works fine here, but `this` types are incompatible. They are not used though, so it's fine.\n    const exitingAnimation = this.exitingV.build();\n    const exitingDuration = this.exitingV.getDuration();\n\n    return (values) => {\n      'worklet';\n      const enteringValues = enteringAnimation(values);\n      const exitingValues = exitingAnimation(values);\n      const animations: StylePropsWithArrayTransform = {\n        transform: [],\n      };\n\n      for (const prop of Object.keys(exitingValues.animations)) {\n        if (prop === 'transform') {\n          if (!Array.isArray(exitingValues.animations.transform)) {\n            continue;\n          }\n          exitingValues.animations.transform.forEach((value, index) => {\n            for (const transformProp of Object.keys(value)) {\n              // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n              animations.transform!.push({\n                [transformProp]: delayFunction(\n                  delay,\n                  withSequence(\n                    value[transformProp as keyof TransformArrayItem],\n                    withTiming(\n                      exitingValues.initialValues.transform\n                        ? // TODO TYPESCRIPT\n                          // @ts-ignore This line of code fails tragically\n                          // in newer versions of React Native, where they have\n                          // narrowed down the type of `transform` even further.\n                          // Since this piece of code improperly typed anyway\n                          // (e.g. it assumes types from RN Animated here) I'd rather\n                          // fix it in the future when types for animations\n                          // are properly defined.\n                          exitingValues.initialValues.transform[index][\n                            transformProp\n                          ]\n                        : 0,\n                      { duration: 0 }\n                    )\n                  )\n                ),\n              } as TransformArrayItem);\n            }\n          });\n        } else {\n          const sequence =\n            enteringValues.animations[prop] !== undefined\n              ? [\n                  exitingValues.animations[prop],\n                  withTiming(enteringValues.initialValues[prop], {\n                    duration: 0,\n                  }),\n                  enteringValues.animations[prop],\n                ]\n              : [\n                  exitingValues.animations[prop],\n                  withTiming(\n                    Object.keys(values).includes(prop)\n                      ? values[prop as keyof LayoutAnimationsValues]\n                      : exitingValues.initialValues[prop],\n                    { duration: 0 }\n                  ),\n                ];\n\n          animations[prop] = delayFunction(delay, withSequence(...sequence));\n        }\n      }\n      for (const prop of Object.keys(enteringValues.animations)) {\n        if (prop === 'transform') {\n          if (!Array.isArray(enteringValues.animations.transform)) {\n            continue;\n          }\n          enteringValues.animations.transform.forEach((value, index) => {\n            for (const transformProp of Object.keys(value)) {\n              // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n              animations.transform!.push({\n                [transformProp]: delayFunction(\n                  delay + exitingDuration,\n                  withSequence(\n                    withTiming(\n                      enteringValues.initialValues.transform\n                        ? // TODO TYPESCRIPT\n                          // @ts-ignore Read similar comment above.\n                          enteringValues.initialValues.transform[index][\n                            transformProp as keyof TransformArrayItem\n                          ]\n                        : 0,\n                      { duration: exitingDuration }\n                    ),\n                    value[transformProp as keyof TransformArrayItem]\n                  )\n                ),\n              } as TransformArrayItem);\n            }\n          });\n        } else if (animations[prop] !== undefined) {\n          // it was already added in the previous loop\n          continue;\n        } else {\n          animations[prop] = delayFunction(\n            delay,\n            withSequence(\n              withTiming(enteringValues.initialValues[prop], { duration: 0 }),\n              enteringValues.animations[prop]\n            )\n          );\n        }\n      }\n\n      const mergedTransform = (\n        Array.isArray(exitingValues.initialValues.transform)\n          ? exitingValues.initialValues.transform\n          : []\n      ).concat(\n        // TODO TYPESCRIPT\n        // @ts-ignore Read similar comment above.\n        (Array.isArray(enteringValues.animations.transform)\n          ? enteringValues.animations.transform\n          : []\n        ).map((value) => {\n          const objectKeys = Object.keys(value);\n          if (objectKeys?.length < 1) {\n            console.error(\n              `[Reanimated]: \\${value} is not a valid Transform object`\n            );\n            return value;\n          }\n\n          const transformProp = objectKeys[0];\n          const current =\n            // TODO TYPESCRIPT\n            // @ts-ignore Read similar comment above.\n            (value[transformProp] as AnimationObject).current;\n          if (typeof current === 'string') {\n            if (current.includes('deg'))\n              return {\n                [transformProp]: '0deg',\n              } as unknown as TransformArrayItem;\n            else\n              return {\n                [transformProp]: '0',\n              } as unknown as TransformArrayItem;\n          } else if (transformProp.includes('translate')) {\n            return { [transformProp]: 0 } as unknown as TransformArrayItem;\n          } else {\n            return { [transformProp]: 1 } as unknown as TransformArrayItem;\n          }\n        })\n      );\n\n      return {\n        initialValues: {\n          ...exitingValues.initialValues,\n          originX: values.currentOriginX,\n          originY: values.currentOriginY,\n          width: values.currentWidth,\n          height: values.currentHeight,\n          transform: mergedTransform,\n        },\n        animations: {\n          originX: delayFunction(\n            delay + exitingDuration,\n            withTiming(values.targetOriginX, { duration: exitingDuration })\n          ),\n          originY: delayFunction(\n            delay + exitingDuration,\n            withTiming(values.targetOriginY, { duration: exitingDuration })\n          ),\n          width: delayFunction(\n            delay + exitingDuration,\n            withTiming(values.targetWidth, { duration: exitingDuration })\n          ),\n          height: delayFunction(\n            delay + exitingDuration,\n            withTiming(values.targetHeight, { duration: exitingDuration })\n          ),\n          ...animations,\n        },\n        callback: callback,\n      };\n    };\n  };\n}\n\nexport function combineTransition(\n  exiting: BaseAnimationBuilder | typeof BaseAnimationBuilder,\n  entering: BaseAnimationBuilder | typeof BaseAnimationBuilder\n): EntryExitTransition {\n  return EntryExitTransition.entering(entering).exiting(exiting);\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}