{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar CartContext = createContext();\nexport function CartProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    cartItems = _useState2[0],\n    setCartItems = _useState2[1];\n  var cartStorageKey = 'userCart';\n  var userIdentifier = 'uniqueUserIdentifier';\n  useEffect(function () {\n    var savedCartItems = localStorage.getItem(cartStorageKey + \"_\" + userIdentifier);\n    if (savedCartItems) {\n      setCartItems(JSON.parse(savedCartItems));\n    }\n  }, [userIdentifier]);\n  var addToCart = function addToCart(item) {\n    var updatedCart = [].concat(_toConsumableArray(cartItems), [item]);\n    setCartItems(updatedCart);\n    localStorage.setItem(cartStorageKey + \"_\" + userIdentifier, JSON.stringify(updatedCart));\n  };\n  var removeFromCart = function removeFromCart(item) {\n    var updatedCart = cartItems.filter(function (cartItem) {\n      return cartItem.name !== item.name;\n    });\n    setCartItems(updatedCart);\n    localStorage.setItem(cartStorageKey + \"_\" + userIdentifier, JSON.stringify(updatedCart));\n  };\n  var clearCart = function clearCart() {\n    setCartItems([]);\n    localStorage.removeItem(cartStorageKey + \"_\" + userIdentifier);\n  };\n  return _jsx(CartContext.Provider, {\n    value: {\n      cartItems: cartItems,\n      addToCart: addToCart,\n      removeFromCart: removeFromCart,\n      clearCart: clearCart\n    },\n    children: children\n  });\n}\nexport function useCart() {\n  return useContext(CartContext);\n}","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","CartContext","CartProvider","_ref","children","_useState","_useState2","_slicedToArray","cartItems","setCartItems","cartStorageKey","userIdentifier","savedCartItems","localStorage","getItem","JSON","parse","addToCart","item","updatedCart","concat","_toConsumableArray","setItem","stringify","removeFromCart","filter","cartItem","name","clearCart","removeItem","Provider","value","useCart"],"sources":["C:/Users/Asus/Desktop/sirFrancis-main/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst CartContext = createContext();\r\n\r\nexport function CartProvider({ children }) {\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const cartStorageKey = 'userCart';\r\n\r\n  // Example user identifier (replace this with your user identification logic)\r\n  const userIdentifier = 'uniqueUserIdentifier'; \r\n\r\n  // Load the user-specific cart from local storage on component mount\r\n  useEffect(() => {\r\n    // Load the user-specific cart from local storage\r\n    const savedCartItems = localStorage.getItem(`${cartStorageKey}_${userIdentifier}`);\r\n    if (savedCartItems) {\r\n      setCartItems(JSON.parse(savedCartItems));\r\n    }\r\n  }, [userIdentifier]);\r\n\r\n  const addToCart = (item) => {\r\n    // Ensure the user's cart is updated\r\n    const updatedCart = [...cartItems, item];\r\n    setCartItems(updatedCart);\r\n\r\n    // Save the updated cart to local storage\r\n    localStorage.setItem(`${cartStorageKey}_${userIdentifier}`, JSON.stringify(updatedCart));\r\n  };\r\n\r\n  const removeFromCart = (item) => {\r\n    // Ensure the user's cart is updated\r\n    const updatedCart = cartItems.filter((cartItem) => cartItem.name !== item.name);\r\n    setCartItems(updatedCart);\r\n\r\n    // Save the updated cart to local storage\r\n    localStorage.setItem(`${cartStorageKey}_${userIdentifier}`, JSON.stringify(updatedCart));\r\n  };\r\n\r\n  const clearCart = () => {\r\n    // Ensure the user's cart is cleared\r\n    setCartItems([]);\r\n\r\n    // Clear the cart data in local storage\r\n    localStorage.removeItem(`${cartStorageKey}_${userIdentifier}`);\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={{ cartItems, addToCart, removeFromCart, clearCart }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useCart() {\r\n  return useContext(CartContext);\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAE9E,IAAMC,WAAW,GAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,SAASO,YAAYA,CAAAC,IAAA,EAAe;EAAA,IAAZC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EACrC,IAAAC,SAAA,GAAkCR,QAAQ,CAAC,EAAE,CAAC;IAAAS,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAC9B,IAAMI,cAAc,GAAG,UAAU;EAGjC,IAAMC,cAAc,GAAG,sBAAsB;EAG7Cb,SAAS,CAAC,YAAM;IAEd,IAAMc,cAAc,GAAGC,YAAY,CAACC,OAAO,CAAIJ,cAAc,SAAIC,cAAgB,CAAC;IAClF,IAAIC,cAAc,EAAE;MAClBH,YAAY,CAACM,IAAI,CAACC,KAAK,CAACJ,cAAc,CAAC,CAAC;IAC1C;EACF,CAAC,EAAE,CAACD,cAAc,CAAC,CAAC;EAEpB,IAAMM,SAAS,GAAG,SAAZA,SAASA,CAAIC,IAAI,EAAK;IAE1B,IAAMC,WAAW,MAAAC,MAAA,CAAAC,kBAAA,CAAOb,SAAS,IAAEU,IAAI,EAAC;IACxCT,YAAY,CAACU,WAAW,CAAC;IAGzBN,YAAY,CAACS,OAAO,CAAIZ,cAAc,SAAIC,cAAc,EAAII,IAAI,CAACQ,SAAS,CAACJ,WAAW,CAAC,CAAC;EAC1F,CAAC;EAED,IAAMK,cAAc,GAAG,SAAjBA,cAAcA,CAAIN,IAAI,EAAK;IAE/B,IAAMC,WAAW,GAAGX,SAAS,CAACiB,MAAM,CAAC,UAACC,QAAQ;MAAA,OAAKA,QAAQ,CAACC,IAAI,KAAKT,IAAI,CAACS,IAAI;IAAA,EAAC;IAC/ElB,YAAY,CAACU,WAAW,CAAC;IAGzBN,YAAY,CAACS,OAAO,CAAIZ,cAAc,SAAIC,cAAc,EAAII,IAAI,CAACQ,SAAS,CAACJ,WAAW,CAAC,CAAC;EAC1F,CAAC;EAED,IAAMS,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;IAEtBnB,YAAY,CAAC,EAAE,CAAC;IAGhBI,YAAY,CAACgB,UAAU,CAAInB,cAAc,SAAIC,cAAgB,CAAC;EAChE,CAAC;EAED,OACEX,IAAA,CAACC,WAAW,CAAC6B,QAAQ;IAACC,KAAK,EAAE;MAAEvB,SAAS,EAATA,SAAS;MAAES,SAAS,EAATA,SAAS;MAAEO,cAAc,EAAdA,cAAc;MAAEI,SAAS,EAATA;IAAU,CAAE;IAAAxB,QAAA,EAC9EA;EAAQ,CACW,CAAC;AAE3B;AAEA,OAAO,SAAS4B,OAAOA,CAAA,EAAG;EACxB,OAAOpC,UAAU,CAACK,WAAW,CAAC;AAChC"},"metadata":{},"sourceType":"module","externalDependencies":[]}