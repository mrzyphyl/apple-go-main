{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nimport { useEffect, useRef } from 'react';\nimport { startMapper, stopMapper, makeRemote } from \"../core\";\nimport updateProps, { updatePropsJestWrapper } from \"../UpdateProps\";\nimport { initialUpdaterRun } from \"../animation\";\nimport NativeReanimatedModule from \"../NativeReanimated\";\nimport { useSharedValue } from \"./useSharedValue\";\nimport { buildWorkletsHash, isAnimated, shallowEqual, validateAnimatedStyles } from \"./utils\";\nimport { makeViewDescriptorsSet, makeViewsRefSet } from \"../ViewDescriptorsSet\";\nimport { isJest, shouldBeUseWeb } from \"../PlatformChecker\";\nfunction prepareAnimation(frameTimestamp, animatedProp, lastAnimation, lastValue) {\n  'worklet';\n\n  if (Array.isArray(animatedProp)) {\n    animatedProp.forEach(function (prop, index) {\n      prepareAnimation(frameTimestamp, prop, lastAnimation && lastAnimation[index], lastValue && lastValue[index]);\n    });\n  }\n  if (typeof animatedProp === 'object' && animatedProp.onFrame) {\n    var animation = animatedProp;\n    var value = animation.current;\n    if (lastValue !== undefined) {\n      if (typeof lastValue === 'object') {\n        if (lastValue.value !== undefined) {\n          value = lastValue.value;\n        } else if (lastValue.onFrame !== undefined) {\n          if ((lastAnimation === null || lastAnimation === void 0 ? void 0 : lastAnimation.current) !== undefined) {\n            value = lastAnimation.current;\n          } else if ((lastValue === null || lastValue === void 0 ? void 0 : lastValue.current) !== undefined) {\n            value = lastValue.current;\n          }\n        }\n      } else {\n        value = lastValue;\n      }\n    }\n    animation.callStart = function (timestamp) {\n      animation.onStart(animation, value, timestamp, lastAnimation);\n    };\n    animation.callStart(frameTimestamp);\n    animation.callStart = null;\n  } else if (typeof animatedProp === 'object') {\n    Object.keys(animatedProp).forEach(function (key) {\n      return prepareAnimation(frameTimestamp, animatedProp[key], lastAnimation && lastAnimation[key], lastValue && lastValue[key]);\n    });\n  }\n}\nfunction runAnimations(animation, timestamp, key, result, animationsActive) {\n  'worklet';\n\n  if (!animationsActive.value) {\n    return true;\n  }\n  if (Array.isArray(animation)) {\n    result[key] = [];\n    var allFinished = true;\n    animation.forEach(function (entry, index) {\n      if (!runAnimations(entry, timestamp, index, result[key], animationsActive)) {\n        allFinished = false;\n      }\n    });\n    return allFinished;\n  } else if (typeof animation === 'object' && animation.onFrame) {\n    var finished = true;\n    if (!animation.finished) {\n      if (animation.callStart) {\n        animation.callStart(timestamp);\n        animation.callStart = null;\n      }\n      finished = animation.onFrame(animation, timestamp);\n      animation.timestamp = timestamp;\n      if (finished) {\n        animation.finished = true;\n        animation.callback && animation.callback(true);\n      }\n    }\n    result[key] = animation.current;\n    return finished;\n  } else if (typeof animation === 'object') {\n    result[key] = {};\n    var _allFinished = true;\n    Object.keys(animation).forEach(function (k) {\n      if (!runAnimations(animation[k], timestamp, k, result[key], animationsActive)) {\n        _allFinished = false;\n      }\n    });\n    return _allFinished;\n  } else {\n    result[key] = animation;\n    return true;\n  }\n}\nfunction styleUpdater(viewDescriptors, updater, state, maybeViewRef, animationsActive) {\n  'worklet';\n\n  var _state$animations, _updater;\n  var isAnimatedProps = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n  var animations = (_state$animations = state.animations) != null ? _state$animations : {};\n  var newValues = (_updater = updater()) != null ? _updater : {};\n  var oldValues = state.last;\n  var nonAnimatedNewValues = {};\n  var hasAnimations = false;\n  var frameTimestamp;\n  var hasNonAnimatedValues = false;\n  for (var key in newValues) {\n    var value = newValues[key];\n    if (isAnimated(value)) {\n      frameTimestamp = global.__frameTimestamp || performance.now();\n      prepareAnimation(frameTimestamp, value, animations[key], oldValues[key]);\n      animations[key] = value;\n      hasAnimations = true;\n    } else {\n      hasNonAnimatedValues = true;\n      nonAnimatedNewValues[key] = value;\n      delete animations[key];\n    }\n  }\n  if (hasAnimations) {\n    var frame = function frame(timestamp) {\n      var animations = state.animations,\n        last = state.last,\n        isAnimationCancelled = state.isAnimationCancelled;\n      if (isAnimationCancelled) {\n        state.isAnimationRunning = false;\n        return;\n      }\n      var updates = {};\n      var allFinished = true;\n      for (var propName in animations) {\n        var finished = runAnimations(animations[propName], timestamp, propName, updates, animationsActive);\n        if (finished) {\n          last[propName] = updates[propName];\n          delete animations[propName];\n        } else {\n          allFinished = false;\n        }\n      }\n      if (updates) {\n        updateProps(viewDescriptors, updates, maybeViewRef);\n      }\n      if (!allFinished) {\n        requestAnimationFrame(frame);\n      } else {\n        state.isAnimationRunning = false;\n      }\n    };\n    state.animations = animations;\n    if (!state.isAnimationRunning) {\n      state.isAnimationCancelled = false;\n      state.isAnimationRunning = true;\n      frame(frameTimestamp);\n    }\n    if (hasNonAnimatedValues) {\n      updateProps(viewDescriptors, nonAnimatedNewValues, maybeViewRef);\n    }\n  } else {\n    state.isAnimationCancelled = true;\n    state.animations = [];\n    if (!shallowEqual(oldValues, newValues)) {\n      updateProps(viewDescriptors, newValues, maybeViewRef, isAnimatedProps);\n    }\n  }\n  state.last = newValues;\n}\nfunction jestStyleUpdater(viewDescriptors, updater, state, maybeViewRef, animationsActive, animatedStyle) {\n  'worklet';\n\n  var _state$animations2, _updater2;\n  var adapters = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : [];\n  var animations = (_state$animations2 = state.animations) != null ? _state$animations2 : {};\n  var newValues = (_updater2 = updater()) != null ? _updater2 : {};\n  var oldValues = state.last;\n  var hasAnimations = false;\n  var frameTimestamp;\n  Object.keys(animations).forEach(function (key) {\n    var value = newValues[key];\n    if (!isAnimated(value)) {\n      delete animations[key];\n    }\n  });\n  Object.keys(newValues).forEach(function (key) {\n    var value = newValues[key];\n    if (isAnimated(value)) {\n      frameTimestamp = global.__frameTimestamp || performance.now();\n      prepareAnimation(frameTimestamp, value, animations[key], oldValues[key]);\n      animations[key] = value;\n      hasAnimations = true;\n    }\n  });\n  function frame(timestamp) {\n    var animations = state.animations,\n      last = state.last,\n      isAnimationCancelled = state.isAnimationCancelled;\n    if (isAnimationCancelled) {\n      state.isAnimationRunning = false;\n      return;\n    }\n    var updates = {};\n    var allFinished = true;\n    Object.keys(animations).forEach(function (propName) {\n      var finished = runAnimations(animations[propName], timestamp, propName, updates, animationsActive);\n      if (finished) {\n        last[propName] = updates[propName];\n        delete animations[propName];\n      } else {\n        allFinished = false;\n      }\n    });\n    if (Object.keys(updates).length) {\n      updatePropsJestWrapper(viewDescriptors, updates, maybeViewRef, animatedStyle, adapters);\n    }\n    if (!allFinished) {\n      requestAnimationFrame(frame);\n    } else {\n      state.isAnimationRunning = false;\n    }\n  }\n  if (hasAnimations) {\n    state.animations = animations;\n    if (!state.isAnimationRunning) {\n      state.isAnimationCancelled = false;\n      state.isAnimationRunning = true;\n      frame(frameTimestamp);\n    }\n  } else {\n    state.isAnimationCancelled = true;\n    state.animations = [];\n  }\n  state.last = newValues;\n  if (!shallowEqual(oldValues, newValues)) {\n    updatePropsJestWrapper(viewDescriptors, newValues, maybeViewRef, animatedStyle, adapters);\n  }\n}\nfunction checkSharedValueUsage(prop, currentKey) {\n  if (Array.isArray(prop)) {\n    for (var _iterator = _createForOfIteratorHelperLoose(prop), _step; !(_step = _iterator()).done;) {\n      var element = _step.value;\n      checkSharedValueUsage(element, currentKey);\n    }\n  } else if (typeof prop === 'object' && prop !== null && prop.value === undefined) {\n    for (var _i = 0, _Object$keys = Object.keys(prop); _i < _Object$keys.length; _i++) {\n      var key = _Object$keys[_i];\n      checkSharedValueUsage(prop[key], key);\n    }\n  } else if (currentKey !== undefined && typeof prop === 'object' && prop !== null && prop.value !== undefined) {\n    throw new Error(\"[Reanimated] Invalid value passed to `\" + currentKey + \"`, maybe you forgot to use `.value`?\");\n  }\n}\nexport function useAnimatedStyle(updater, dependencies, adapters) {\n  var _updater$__closure;\n  var isAnimatedProps = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var viewsRef = makeViewsRefSet();\n  var initRef = useRef();\n  var inputs = Object.values((_updater$__closure = updater.__closure) != null ? _updater$__closure : {});\n  if (shouldBeUseWeb()) {\n    var _dependencies;\n    if (!inputs.length && (_dependencies = dependencies) !== null && _dependencies !== void 0 && _dependencies.length) {\n      inputs = dependencies;\n    }\n    if (__DEV__ && !inputs.length && !dependencies && !updater.__workletHash) {\n      throw new Error(\"[Reanimated] `useAnimatedStyle` was used without a dependency array or Babel plugin. Please explicitly pass a dependency array, or enable the Babel/SWC plugin.\\nFor more, see the docs: `https://docs.swmansion.com/react-native-reanimated/docs/guides/web-support#web-without-the-babel-plugin`.\");\n    }\n  }\n  var adaptersArray = adapters ? Array.isArray(adapters) ? adapters : [adapters] : [];\n  var adaptersHash = adapters ? buildWorkletsHash(adaptersArray) : null;\n  var animationsActive = useSharedValue(true);\n  var animatedStyle = useRef({});\n  if (!dependencies) {\n    dependencies = [].concat(_toConsumableArray(inputs), [updater.__workletHash]);\n  } else {\n    dependencies.push(updater.__workletHash);\n  }\n  adaptersHash && dependencies.push(adaptersHash);\n  if (!initRef.current) {\n    var initialStyle = initialUpdaterRun(updater);\n    validateAnimatedStyles(initialStyle);\n    initRef.current = {\n      initial: {\n        value: initialStyle,\n        updater: updater\n      },\n      remoteState: makeRemote({\n        last: initialStyle,\n        animations: {},\n        isAnimationCancelled: false,\n        isAnimationRunning: false\n      }),\n      viewDescriptors: makeViewDescriptorsSet()\n    };\n  }\n  var _initRef$current = initRef.current,\n    initial = _initRef$current.initial,\n    remoteState = _initRef$current.remoteState,\n    viewDescriptors = _initRef$current.viewDescriptors;\n  var sharableViewDescriptors = viewDescriptors.sharableViewDescriptors;\n  var maybeViewRef = NativeReanimatedModule.native ? undefined : viewsRef;\n  dependencies.push(sharableViewDescriptors);\n  useEffect(function () {\n    var fun;\n    var updaterFn = updater;\n    if (adapters) {\n      updaterFn = function updaterFn() {\n        'worklet';\n\n        var newValues = updater();\n        adaptersArray.forEach(function (adapter) {\n          adapter(newValues);\n        });\n        return newValues;\n      };\n    }\n    if (isJest()) {\n      fun = function fun() {\n        'worklet';\n\n        jestStyleUpdater(sharableViewDescriptors, updater, remoteState, maybeViewRef, animationsActive, animatedStyle, adaptersArray);\n      };\n    } else {\n      fun = function fun() {\n        'worklet';\n\n        styleUpdater(sharableViewDescriptors, updaterFn, remoteState, maybeViewRef, animationsActive, isAnimatedProps);\n      };\n    }\n    var mapperId = startMapper(fun, inputs);\n    return function () {\n      stopMapper(mapperId);\n    };\n  }, dependencies);\n  useEffect(function () {\n    animationsActive.value = true;\n    return function () {\n      animationsActive.value = false;\n    };\n  }, []);\n  checkSharedValueUsage(initial.value);\n  if (isJest()) {\n    return {\n      viewDescriptors: viewDescriptors,\n      initial: initial,\n      viewsRef: viewsRef,\n      animatedStyle: animatedStyle\n    };\n  } else {\n    return {\n      viewDescriptors: viewDescriptors,\n      initial: initial,\n      viewsRef: viewsRef\n    };\n  }\n}","map":{"version":3,"sources":["C:\\Users\\Asus\\Desktop\\sirFrancis-main\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\hook\\useAnimatedStyle.ts"],"names":["useEffect","useRef","startMapper","stopMapper","makeRemote","updateProps","updatePropsJestWrapper","initialUpdaterRun","NativeReanimatedModule","useSharedValue","buildWorkletsHash","isAnimated","shallowEqual","validateAnimatedStyles","makeViewDescriptorsSet","makeViewsRefSet","isJest","shouldBeUseWeb","prepareAnimation","frameTimestamp","animatedProp","lastAnimation","lastValue","Array","isArray","forEach","prop","index","onFrame","animation","value","current","undefined","callStart","timestamp","onStart","Object","keys","key","runAnimations","result","animationsActive","allFinished","entry","finished","callback","k","styleUpdater","viewDescriptors","updater","state","maybeViewRef","isAnimatedProps","animations","newValues","oldValues","last","nonAnimatedNewValues","hasAnimations","hasNonAnimatedValues","global","__frameTimestamp","performance","now","frame","isAnimationCancelled","isAnimationRunning","updates","propName","requestAnimationFrame","jestStyleUpdater","animatedStyle","adapters","length","checkSharedValueUsage","currentKey","element","Error","useAnimatedStyle","dependencies","viewsRef","initRef","inputs","values","__closure","__DEV__","__workletHash","adaptersArray","adaptersHash","push","initialStyle","initial","remoteState","sharableViewDescriptors","native","fun","updaterFn","adapter","mapperId"],"mappings":"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","sourcesContent":["import type { MutableRefObject } from 'react';\nimport { useEffect, useRef } from 'react';\n\nimport { startMapper, stopMapper, makeRemote } from '../core';\nimport updateProps, { updatePropsJestWrapper } from '../UpdateProps';\nimport { initialUpdaterRun } from '../animation';\nimport NativeReanimatedModule from '../NativeReanimated';\nimport { useSharedValue } from './useSharedValue';\nimport {\n  buildWorkletsHash,\n  isAnimated,\n  shallowEqual,\n  validateAnimatedStyles,\n} from './utils';\nimport type { DefaultStyle, DependencyList, Descriptor } from './commonTypes';\nimport type { ViewDescriptorsSet, ViewRefSet } from '../ViewDescriptorsSet';\nimport { makeViewDescriptorsSet, makeViewsRefSet } from '../ViewDescriptorsSet';\nimport { isJest, shouldBeUseWeb } from '../PlatformChecker';\nimport type {\n  AnimationObject,\n  Timestamp,\n  NestedObjectValues,\n  SharedValue,\n  StyleProps,\n  __AdapterWorkletFunction,\n  __BasicWorkletFunction,\n} from '../commonTypes';\nimport type { AnimatedStyle } from '../helperTypes';\n\ninterface AnimatedState {\n  last: AnimatedStyle<any>;\n  animations: AnimatedStyle<any>;\n  isAnimationRunning: boolean;\n  isAnimationCancelled: boolean;\n}\n\ninterface AnimationRef {\n  initial: {\n    value: AnimatedStyle<any>;\n    updater: () => AnimatedStyle<any>;\n  };\n  remoteState: AnimatedState;\n  viewDescriptors: ViewDescriptorsSet;\n}\n\nfunction prepareAnimation(\n  frameTimestamp: number,\n  animatedProp: AnimatedStyle<any>,\n  lastAnimation: AnimatedStyle<any>,\n  lastValue: AnimatedStyle<any>\n): void {\n  'worklet';\n  if (Array.isArray(animatedProp)) {\n    animatedProp.forEach((prop, index) => {\n      prepareAnimation(\n        frameTimestamp,\n        prop,\n        lastAnimation && lastAnimation[index],\n        lastValue && lastValue[index]\n      );\n    });\n    // return animatedProp;\n  }\n  if (typeof animatedProp === 'object' && animatedProp.onFrame) {\n    const animation = animatedProp;\n\n    let value = animation.current;\n    if (lastValue !== undefined) {\n      if (typeof lastValue === 'object') {\n        if (lastValue.value !== undefined) {\n          // previously it was a shared value\n          value = lastValue.value;\n        } else if (lastValue.onFrame !== undefined) {\n          if (lastAnimation?.current !== undefined) {\n            // it was an animation before, copy its state\n            value = lastAnimation.current;\n          } else if (lastValue?.current !== undefined) {\n            // it was initialized\n            value = lastValue.current;\n          }\n        }\n      } else {\n        // previously it was a plain value, just set it as starting point\n        value = lastValue;\n      }\n    }\n\n    animation.callStart = (timestamp: Timestamp) => {\n      animation.onStart(animation, value, timestamp, lastAnimation);\n    };\n    animation.callStart(frameTimestamp);\n    animation.callStart = null;\n  } else if (typeof animatedProp === 'object') {\n    // it is an object\n    Object.keys(animatedProp).forEach((key) =>\n      prepareAnimation(\n        frameTimestamp,\n        animatedProp[key],\n        lastAnimation && lastAnimation[key],\n        lastValue && lastValue[key]\n      )\n    );\n  }\n}\n\nfunction runAnimations(\n  animation: AnimatedStyle<any>,\n  timestamp: Timestamp,\n  key: number | string,\n  result: AnimatedStyle<any>,\n  animationsActive: SharedValue<boolean>\n): boolean {\n  'worklet';\n  if (!animationsActive.value) {\n    return true;\n  }\n  if (Array.isArray(animation)) {\n    result[key] = [];\n    let allFinished = true;\n    animation.forEach((entry, index) => {\n      if (\n        !runAnimations(entry, timestamp, index, result[key], animationsActive)\n      ) {\n        allFinished = false;\n      }\n    });\n    return allFinished;\n  } else if (typeof animation === 'object' && animation.onFrame) {\n    let finished = true;\n    if (!animation.finished) {\n      if (animation.callStart) {\n        animation.callStart(timestamp);\n        animation.callStart = null;\n      }\n      finished = animation.onFrame(animation, timestamp);\n      animation.timestamp = timestamp;\n      if (finished) {\n        animation.finished = true;\n        animation.callback && animation.callback(true /* finished */);\n      }\n    }\n    result[key] = animation.current;\n    return finished;\n  } else if (typeof animation === 'object') {\n    result[key] = {};\n    let allFinished = true;\n    Object.keys(animation).forEach((k) => {\n      if (\n        !runAnimations(\n          animation[k],\n          timestamp,\n          k,\n          result[key],\n          animationsActive\n        )\n      ) {\n        allFinished = false;\n      }\n    });\n    return allFinished;\n  } else {\n    result[key] = animation;\n    return true;\n  }\n}\n\nfunction styleUpdater(\n  viewDescriptors: SharedValue<Descriptor[]>,\n  updater: __BasicWorkletFunction<AnimatedStyle<any>>,\n  state: AnimatedState,\n  maybeViewRef: ViewRefSet<any> | undefined,\n  animationsActive: SharedValue<boolean>,\n  isAnimatedProps = false\n): void {\n  'worklet';\n  const animations = state.animations ?? {};\n  const newValues = updater() ?? {};\n  const oldValues = state.last;\n  const nonAnimatedNewValues: StyleProps = {};\n\n  let hasAnimations = false;\n  let frameTimestamp: number | undefined;\n  let hasNonAnimatedValues = false;\n  for (const key in newValues) {\n    const value = newValues[key];\n    if (isAnimated(value)) {\n      frameTimestamp = global.__frameTimestamp || performance.now();\n      prepareAnimation(frameTimestamp, value, animations[key], oldValues[key]);\n      animations[key] = value;\n      hasAnimations = true;\n    } else {\n      hasNonAnimatedValues = true;\n      nonAnimatedNewValues[key] = value;\n      delete animations[key];\n    }\n  }\n\n  if (hasAnimations) {\n    const frame = (timestamp: Timestamp) => {\n      const { animations, last, isAnimationCancelled } = state;\n      if (isAnimationCancelled) {\n        state.isAnimationRunning = false;\n        return;\n      }\n\n      const updates: AnimatedStyle<any> = {};\n      let allFinished = true;\n      for (const propName in animations) {\n        const finished = runAnimations(\n          animations[propName],\n          timestamp,\n          propName,\n          updates,\n          animationsActive\n        );\n        if (finished) {\n          last[propName] = updates[propName];\n          delete animations[propName];\n        } else {\n          allFinished = false;\n        }\n      }\n\n      if (updates) {\n        updateProps(viewDescriptors, updates, maybeViewRef);\n      }\n\n      if (!allFinished) {\n        requestAnimationFrame(frame);\n      } else {\n        state.isAnimationRunning = false;\n      }\n    };\n\n    state.animations = animations;\n    if (!state.isAnimationRunning) {\n      state.isAnimationCancelled = false;\n      state.isAnimationRunning = true;\n      frame(frameTimestamp!);\n    }\n\n    if (hasNonAnimatedValues) {\n      updateProps(viewDescriptors, nonAnimatedNewValues, maybeViewRef);\n    }\n  } else {\n    state.isAnimationCancelled = true;\n    state.animations = [];\n\n    if (!shallowEqual(oldValues, newValues)) {\n      updateProps(viewDescriptors, newValues, maybeViewRef, isAnimatedProps);\n    }\n  }\n  state.last = newValues;\n}\n\nfunction jestStyleUpdater(\n  viewDescriptors: SharedValue<Descriptor[]>,\n  updater: __BasicWorkletFunction<AnimatedStyle<any>>,\n  state: AnimatedState,\n  maybeViewRef: ViewRefSet<any> | undefined,\n  animationsActive: SharedValue<boolean>,\n  animatedStyle: MutableRefObject<AnimatedStyle<any>>,\n  adapters: __AdapterWorkletFunction[] = []\n): void {\n  'worklet';\n  const animations: AnimatedStyle<any> = state.animations ?? {};\n  const newValues = updater() ?? {};\n  const oldValues = state.last;\n\n  // extract animated props\n  let hasAnimations = false;\n  let frameTimestamp: number | undefined;\n  Object.keys(animations).forEach((key) => {\n    const value = newValues[key];\n    if (!isAnimated(value)) {\n      delete animations[key];\n    }\n  });\n  Object.keys(newValues).forEach((key) => {\n    const value = newValues[key];\n    if (isAnimated(value)) {\n      frameTimestamp = global.__frameTimestamp || performance.now();\n      prepareAnimation(frameTimestamp, value, animations[key], oldValues[key]);\n      animations[key] = value;\n      hasAnimations = true;\n    }\n  });\n\n  function frame(timestamp: Timestamp) {\n    const { animations, last, isAnimationCancelled } = state;\n    if (isAnimationCancelled) {\n      state.isAnimationRunning = false;\n      return;\n    }\n\n    const updates: AnimatedStyle<any> = {};\n    let allFinished = true;\n    Object.keys(animations).forEach((propName) => {\n      const finished = runAnimations(\n        animations[propName],\n        timestamp,\n        propName,\n        updates,\n        animationsActive\n      );\n      if (finished) {\n        last[propName] = updates[propName];\n        delete animations[propName];\n      } else {\n        allFinished = false;\n      }\n    });\n\n    if (Object.keys(updates).length) {\n      updatePropsJestWrapper(\n        viewDescriptors,\n        updates,\n        maybeViewRef,\n        animatedStyle,\n        adapters\n      );\n    }\n\n    if (!allFinished) {\n      requestAnimationFrame(frame);\n    } else {\n      state.isAnimationRunning = false;\n    }\n  }\n\n  if (hasAnimations) {\n    state.animations = animations;\n    if (!state.isAnimationRunning) {\n      state.isAnimationCancelled = false;\n      state.isAnimationRunning = true;\n      frame(frameTimestamp!);\n    }\n  } else {\n    state.isAnimationCancelled = true;\n    state.animations = [];\n  }\n\n  // calculate diff\n  state.last = newValues;\n\n  if (!shallowEqual(oldValues, newValues)) {\n    updatePropsJestWrapper(\n      viewDescriptors,\n      newValues,\n      maybeViewRef,\n      animatedStyle,\n      adapters\n    );\n  }\n}\n\n// check for invalid usage of shared values in returned object\nfunction checkSharedValueUsage(\n  prop: NestedObjectValues<AnimationObject>,\n  currentKey?: string\n): void {\n  if (Array.isArray(prop)) {\n    // if it's an array (i.ex. transform) validate all its elements\n    for (const element of prop) {\n      checkSharedValueUsage(element, currentKey);\n    }\n  } else if (\n    typeof prop === 'object' &&\n    prop !== null &&\n    prop.value === undefined\n  ) {\n    // if it's a nested object, run validation for all its props\n    for (const key of Object.keys(prop)) {\n      checkSharedValueUsage(prop[key], key);\n    }\n  } else if (\n    currentKey !== undefined &&\n    typeof prop === 'object' &&\n    prop !== null &&\n    prop.value !== undefined\n  ) {\n    // if shared value is passed insted of its value, throw an error\n    throw new Error(\n      `[Reanimated] Invalid value passed to \\`${currentKey}\\`, maybe you forgot to use \\`.value\\`?`\n    );\n  }\n}\n\n// You cannot pass Shared Values to `useAnimatedStyle` directly.\nexport function useAnimatedStyle<Style extends DefaultStyle>(\n  updater: () => Style,\n  deps?: DependencyList | null\n): Style;\n\nexport function useAnimatedStyle<Style extends DefaultStyle>(\n  updater: __BasicWorkletFunction<Style>,\n  dependencies?: DependencyList | null,\n  adapters?: __AdapterWorkletFunction | __AdapterWorkletFunction[],\n  isAnimatedProps = false\n) {\n  const viewsRef: ViewRefSet<unknown> = makeViewsRefSet();\n  const initRef = useRef<AnimationRef>();\n  let inputs = Object.values(updater.__closure ?? {});\n  if (shouldBeUseWeb()) {\n    if (!inputs.length && dependencies?.length) {\n      // let web work without a Babel/SWC plugin\n      inputs = dependencies;\n    }\n    if (__DEV__ && !inputs.length && !dependencies && !updater.__workletHash) {\n      throw new Error(\n        `[Reanimated] \\`useAnimatedStyle\\` was used without a dependency array or Babel plugin. Please explicitly pass a dependency array, or enable the Babel/SWC plugin.\nFor more, see the docs: \\`https://docs.swmansion.com/react-native-reanimated/docs/guides/web-support#web-without-the-babel-plugin\\`.`\n      );\n    }\n  }\n  const adaptersArray: __AdapterWorkletFunction[] = adapters\n    ? Array.isArray(adapters)\n      ? adapters\n      : [adapters]\n    : [];\n  const adaptersHash = adapters ? buildWorkletsHash(adaptersArray) : null;\n  const animationsActive = useSharedValue<boolean>(true);\n  const animatedStyle: MutableRefObject<Style> = useRef<Style>({} as Style);\n\n  // build dependencies\n  if (!dependencies) {\n    dependencies = [...inputs, updater.__workletHash];\n  } else {\n    dependencies.push(updater.__workletHash);\n  }\n  adaptersHash && dependencies.push(adaptersHash);\n\n  if (!initRef.current) {\n    const initialStyle = initialUpdaterRun(updater);\n    validateAnimatedStyles(initialStyle);\n    initRef.current = {\n      initial: {\n        value: initialStyle,\n        updater: updater,\n      },\n      remoteState: makeRemote<AnimatedState>({\n        last: initialStyle,\n        animations: {},\n        isAnimationCancelled: false,\n        isAnimationRunning: false,\n      }),\n      viewDescriptors: makeViewDescriptorsSet(),\n    };\n  }\n\n  const { initial, remoteState, viewDescriptors } = initRef.current;\n  const sharableViewDescriptors = viewDescriptors.sharableViewDescriptors;\n  const maybeViewRef = NativeReanimatedModule.native ? undefined : viewsRef;\n\n  dependencies.push(sharableViewDescriptors);\n\n  useEffect(() => {\n    let fun;\n    let updaterFn = updater;\n    if (adapters) {\n      updaterFn = () => {\n        'worklet';\n        const newValues = updater();\n        adaptersArray.forEach((adapter) => {\n          // Those adapters are some crazy stuff\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          adapter(newValues as any);\n        });\n        return newValues;\n      };\n    }\n\n    if (isJest()) {\n      fun = () => {\n        'worklet';\n        jestStyleUpdater(\n          sharableViewDescriptors,\n          updater,\n          remoteState,\n          maybeViewRef,\n          animationsActive,\n          animatedStyle,\n          adaptersArray\n        );\n      };\n    } else {\n      fun = () => {\n        'worklet';\n        styleUpdater(\n          sharableViewDescriptors,\n          updaterFn,\n          remoteState,\n          maybeViewRef,\n          animationsActive,\n          isAnimatedProps\n        );\n      };\n    }\n    const mapperId = startMapper(fun, inputs);\n    return () => {\n      stopMapper(mapperId);\n    };\n  }, dependencies);\n\n  useEffect(() => {\n    animationsActive.value = true;\n    return () => {\n      animationsActive.value = false;\n    };\n  }, []);\n\n  checkSharedValueUsage(initial.value);\n\n  if (isJest()) {\n    return { viewDescriptors, initial, viewsRef, animatedStyle };\n  } else {\n    return { viewDescriptors, initial, viewsRef };\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}