{"ast":null,"code":"import { useEffect, useRef } from 'react';\nimport FrameCallbackRegistryJS from \"../frameCallback/FrameCallbackRegistryJS\";\nvar frameCallbackRegistry = new FrameCallbackRegistryJS();\nexport function useFrameCallback(callback) {\n  var autostart = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var ref = useRef({\n    setActive: function setActive(isActive) {\n      frameCallbackRegistry.manageStateFrameCallback(ref.current.callbackId, isActive);\n      ref.current.isActive = isActive;\n    },\n    isActive: autostart,\n    callbackId: -1\n  });\n  useEffect(function () {\n    ref.current.callbackId = frameCallbackRegistry.registerFrameCallback(callback);\n    ref.current.setActive(ref.current.isActive);\n    return function () {\n      frameCallbackRegistry.unregisterFrameCallback(ref.current.callbackId);\n      ref.current.callbackId = -1;\n    };\n  }, [callback, autostart]);\n  return ref.current;\n}","map":{"version":3,"sources":["C:\\Users\\Asus\\Desktop\\sirFrancis-main\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\hook\\useFrameCallback.ts"],"names":["useEffect","useRef","FrameCallbackRegistryJS","frameCallbackRegistry","useFrameCallback","callback","autostart","ref","setActive","isActive","manageStateFrameCallback","current","callbackId","registerFrameCallback","unregisterFrameCallback"],"mappings":"AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,OAAOC,uBAAuB;AAQ9B,IAAMC,qBAAqB,GAAG,IAAID,uBAAuB,CAAA,CAAE;AAE3D,OAAO,SAASE,gBAAgBA,CAC9BC,QAAwC,EAEzB;EAAA,IADfC,SAAS,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAG,IAAI;EAEhB,IAAMC,GAAG,GAAGN,MAAM,CAAgB;IAChCO,SAAS,EAAGC,SAAAA,UAAAA,QAAiB,EAAK;MAChCN,qBAAqB,CAACO,wBAAwB,CAC5CH,GAAG,CAACI,OAAO,CAACC,UAAU,EACtBH,QAAQ,CACT;MACDF,GAAG,CAACI,OAAO,CAACF,QAAQ,GAAGA,QAAQ;IACjC,CAAC;IACDA,QAAQ,EAAEH,SAAS;IACnBM,UAAU,EAAE,CAAC;EACf,CAAC,CAAC;EAEFZ,SAAS,CAAC,YAAM;IACdO,GAAG,CAACI,OAAO,CAACC,UAAU,GACpBT,qBAAqB,CAACU,qBAAqB,CAACR,QAAQ,CAAC;IACvDE,GAAG,CAACI,OAAO,CAACH,SAAS,CAACD,GAAG,CAACI,OAAO,CAACF,QAAQ,CAAC;IAE3C,OAAO,YAAM;MACXN,qBAAqB,CAACW,uBAAuB,CAACP,GAAG,CAACI,OAAO,CAACC,UAAU,CAAC;MACrEL,GAAG,CAACI,OAAO,CAACC,UAAU,GAAG,CAAC,CAAC;IAC7B,CAAC;EACH,CAAC,EAAE,CAACP,QAAQ,EAAEC,SAAS,CAAC,CAAC;EAEzB,OAAOC,GAAG,CAACI,OAAO;AACpB","sourcesContent":["import { useEffect, useRef } from 'react';\nimport FrameCallbackRegistryJS from '../frameCallback/FrameCallbackRegistryJS';\nimport type { FrameInfo } from '../frameCallback/FrameCallbackRegistryUI';\n\nexport type FrameCallback = {\n  setActive: (isActive: boolean) => void;\n  isActive: boolean;\n  callbackId: number;\n};\nconst frameCallbackRegistry = new FrameCallbackRegistryJS();\n\nexport function useFrameCallback(\n  callback: (frameInfo: FrameInfo) => void,\n  autostart = true\n): FrameCallback {\n  const ref = useRef<FrameCallback>({\n    setActive: (isActive: boolean) => {\n      frameCallbackRegistry.manageStateFrameCallback(\n        ref.current.callbackId,\n        isActive\n      );\n      ref.current.isActive = isActive;\n    },\n    isActive: autostart,\n    callbackId: -1,\n  });\n\n  useEffect(() => {\n    ref.current.callbackId =\n      frameCallbackRegistry.registerFrameCallback(callback);\n    ref.current.setActive(ref.current.isActive);\n\n    return () => {\n      frameCallbackRegistry.unregisterFrameCallback(ref.current.callbackId);\n      ref.current.callbackId = -1;\n    };\n  }, [callback, autostart]);\n\n  return ref.current;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}