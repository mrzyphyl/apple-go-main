{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar CartContext = createContext();\nvar useAsyncStorage = typeof window !== 'undefined' ? window.localStorage : require('react-native').AsyncStorage;\nexport function CartProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    cartItems = _useState2[0],\n    setCartItems = _useState2[1];\n  useEffect(function () {\n    var loadCartFromStorage = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var cartData = yield useAsyncStorage.getItem('userCart');\n          if (cartData) {\n            setCartItems(JSON.parse(cartData));\n          }\n        } catch (error) {\n          console.error('Error loading cart data:', error);\n        }\n      });\n      return function loadCartFromStorage() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    loadCartFromStorage();\n  }, []);\n  var addToCart = function addToCart(item) {\n    var itemExists = cartItems.some(function (cartItem) {\n      return cartItem.name === item.name;\n    });\n    if (!itemExists) {\n      setCartItems([].concat(_toConsumableArray(cartItems), [item]));\n    }\n  };\n  var removeFromCart = function removeFromCart(item) {\n    var updatedCart = cartItems.filter(function (cartItem) {\n      return cartItem.name !== item.name;\n    });\n    setCartItems(updatedCart);\n  };\n  var clearCart = function clearCart() {\n    setCartItems([]);\n  };\n  useEffect(function () {\n    var saveCartToStorage = function () {\n      var _ref3 = _asyncToGenerator(function* () {\n        try {\n          yield useAsyncStorage.setItem('userCart', JSON.stringify(cartItems));\n          console.log('Cart data saved to storage');\n        } catch (error) {\n          console.error('Error saving cart data:', error);\n        }\n      });\n      return function saveCartToStorage() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    saveCartToStorage();\n  }, [cartItems]);\n  return _jsx(CartContext.Provider, {\n    value: {\n      cartItems: cartItems,\n      addToCart: addToCart,\n      removeFromCart: removeFromCart,\n      clearCart: clearCart\n    },\n    children: children\n  });\n}\nexport function useCart() {\n  return useContext(CartContext);\n}","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","CartContext","useAsyncStorage","window","localStorage","require","AsyncStorage","CartProvider","_ref","children","_useState","_useState2","_slicedToArray","cartItems","setCartItems","loadCartFromStorage","_ref2","_asyncToGenerator","cartData","getItem","JSON","parse","error","console","apply","arguments","addToCart","item","itemExists","some","cartItem","name","concat","_toConsumableArray","removeFromCart","updatedCart","filter","clearCart","saveCartToStorage","_ref3","setItem","stringify","log","Provider","value","useCart"],"sources":["C:/Users/Asus/Desktop/sirFrancis-main/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst CartContext = createContext();\r\n\r\nconst useAsyncStorage = typeof window !== 'undefined' ? window.localStorage : require('react-native').AsyncStorage;\r\n\r\nexport function CartProvider({ children }) {\r\n  const [cartItems, setCartItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Load the user-specific cart from storage on component mount\r\n    const loadCartFromStorage = async () => {\r\n      try {\r\n        const cartData = await useAsyncStorage.getItem('userCart');\r\n        if (cartData) {\r\n          setCartItems(JSON.parse(cartData));\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading cart data:', error);\r\n      }\r\n    };\r\n\r\n    loadCartFromStorage();\r\n  }, []);\r\n\r\n  const addToCart = (item) => {\r\n    // Check if the item already exists in the cart\r\n    const itemExists = cartItems.some((cartItem) => cartItem.name === item.name);\r\n\r\n    if (!itemExists) {\r\n      setCartItems([...cartItems, item]);\r\n    }\r\n  };\r\n\r\n  const removeFromCart = (item) => {\r\n    const updatedCart = cartItems.filter((cartItem) => cartItem.name !== item.name);\r\n    setCartItems(updatedCart);\r\n  };\r\n\r\n  const clearCart = () => {\r\n    setCartItems([]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Save the user-specific cart to storage whenever it changes\r\n    const saveCartToStorage = async () => {\r\n      try {\r\n        await useAsyncStorage.setItem('userCart', JSON.stringify(cartItems));\r\n        console.log('Cart data saved to storage');\r\n      } catch (error) {\r\n        console.error('Error saving cart data:', error);\r\n      }\r\n    };\r\n\r\n    saveCartToStorage();\r\n  }, [cartItems]);\r\n\r\n  return (\r\n    <CartContext.Provider value={{ cartItems, addToCart, removeFromCart, clearCart }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useCart() {\r\n  return useContext(CartContext);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}